{"docstore/metadata": {"23b43534-0f7c-441a-b00c-2a396fa97e13": {"doc_hash": "4b0b8dee89c6084115417bf3a8d88536688597e098410c3100c10247dd45787c"}, "69a0551c-60ad-4c34-ae4f-0ae8f7851336": {"doc_hash": "18b3040846423ab949f05aae0432c8fddb49a2b1ca1da66e60defe313a9eddb2"}, "ff15331f-a9e9-42ca-8bd0-30a9908edb88": {"doc_hash": "b3c03ac615c85db968fb45ab4e892f1fe809b152615e66917d1e84e22531c30d"}, "fa82cc69-2897-4bdb-9fca-34434cb18be6": {"doc_hash": "3735f82a12ba4e4f56f738ef46e22b25913e08d9d40fd74a078328ce72c08ff0"}, "00393fdf-4fab-43c5-8f8e-43fa1eb29cb9": {"doc_hash": "dd41a0e671a4fbd83bd901e42e55a5b0db7c73524fddcd87a6ea9300015a3515"}, "16afe49f-2bdd-40d5-9a11-f8f605e0b3d7": {"doc_hash": "e48aa81b7b46603e19a6fbb0196d9b753c91b8cdf5294924e58de2b5e2d03653"}, "04689a52-3381-40b8-8f03-670abd4de8ce": {"doc_hash": "2e980418d81ed9297b3b51846ddcebbcea58b998393c1d9577fb53ce3a87ca4c"}, "e0b2de8d-ff0e-46bb-a65a-ff5fa24e6c04": {"doc_hash": "6957778e4ef738dc991b91bda3bcb572362d2d44014e0133087acf7fa597d8ed"}, "22238510-3d8c-489c-a495-0ed551a48373": {"doc_hash": "e8020109c48546c6194fceece6b9fd8bd755b4cb45fd334d30074ed63373be53"}, "783f1e0e-9646-4ea6-89bd-136891731be8": {"doc_hash": "b3bd8ade2af776704f66adb4d994c65554dc731cd7ba4020b9717cab6ab978f6"}, "34cae5d5-cfad-4c79-9e6b-c9b93cc92792": {"doc_hash": "dd04cf1fe8ce045009943d8c1b20a4680dccd7832f14bf26104f526b21dd654b"}, "97fa2ba9-78ff-43b5-878b-e1ed2e94aec1": {"doc_hash": "4c6c68ca930bf6f9cbc4f42bbb0b30ec51ccb6712e23cd654dc50cbf45e3f82c"}, "e17652b9-92a6-4961-96c8-79757b4f72a9": {"doc_hash": "05a8bdd9e9fb6db79a04050dcff2999523894e50e67ef75a65c341b9aa62044b"}, "9bf55d31-e4a7-42f7-ac71-c11eb627537c": {"doc_hash": "175a85fa5981a58f4dbd341542b5a47610d9f4330afefeaaa909e679fbbca353"}, "24eb089b-3e08-4b57-970e-4a7f47482506": {"doc_hash": "e87a131ccd7d70c7a63f6cd4b2ef308e7e0904c247148b0b0dedab5ef3c978d8"}, "a169a083-f2f1-4129-a4c5-aa269e5f1df7": {"doc_hash": "25773927dad1990aabe76590368ace1053fd101076a9296043142e2e0b295a02"}, "04fb0d13-6171-40bd-a899-e968c9d12a79": {"doc_hash": "8559eb018b450d1374a214e64c01c80d3f9e073fabc04a90656ede2b90b531eb"}, "f26bc7d3-900f-4b71-871c-3623181653d5": {"doc_hash": "82248c503386a865513f18d21afd37d7695aab96d6d2cf430db34967fd54d97c"}, "179e64c6-0e98-4bcd-8a28-424b46b722ce": {"doc_hash": "ef267e94f98c4d6e74aa14230442f8f6d0c8e5e442f57a595c7109b467ccedcf"}, "dd8c41dd-4f30-45aa-9f24-4c42187bd089": {"doc_hash": "de4b8733aaf8715c6f927170e914cf6ecbf41bcaa7361395319515dca7599ae5"}, "dfe24c78-87b5-49e3-b983-b08e80c0d34b": {"doc_hash": "4293c64514569ad258b103618bea6ddec5f62c032489cef86bafc7d6046358cc"}, "a322d5e2-d268-4f39-b943-1bd36c92d831": {"doc_hash": "568bc7acb60bdcde745741c65772a32baf8191045231efae603d8baefb9c7505"}, "28442dad-f08b-4696-bc2f-232f6e8e0d90": {"doc_hash": "10adf774ce7ab6ec1120edd6e3209196bbc64c7e08c66e386ed47de4f1b5dd44"}, "03e2cd3e-53dc-430d-abef-8f3e3d41d4f1": {"doc_hash": "f0c98aaf62097d82b7eeede2000bb410bb4d8225ec065aadeb20513069570625"}, "75f70afd-2c93-41bc-91b4-9cca3f0d744c": {"doc_hash": "d47fd5f70dc1d03e6505cbf8876710e0aff9e744d4f503350d6cd7152b48e071"}, "f62c0401-f1dc-487b-9e91-9115f13ffd4f": {"doc_hash": "4aac7b0daf41722bc37f857c898a8149f975584a09d5a144f53d2711e9a2110e"}, "6281c9bd-bf64-43f2-bf9d-357e43b156d5": {"doc_hash": "6f134cf395b32f54d639dfc0da257a7422844716ecde3164ec509c7559bdc9b4"}, "69ed1f35-9835-4cb7-9889-b1ac13b3e54b": {"doc_hash": "b8c3e676a7e409adee4f32b1f2e3b4d60e6f591d794c28003c0d1621ef8c8e50"}, "62862598-7b5a-4f28-b474-34d071e70ab6": {"doc_hash": "3d5bbd76caaa6930071c008ae7f46958314fa45c90f0af91035cf0b0b818f77a"}, "781a2c44-b463-4705-b1b9-987c9aba0036": {"doc_hash": "45b85b4c12e6476f50dfcfeaec415b9cbe77fe493738eb0d061873326dad85c3"}, "e88c2564-ee00-4fdb-af7a-33c1f536f055": {"doc_hash": "4b0b8dee89c6084115417bf3a8d88536688597e098410c3100c10247dd45787c", "ref_doc_id": "23b43534-0f7c-441a-b00c-2a396fa97e13"}, "42093df0-27ff-4f56-b4e4-2831c5c5e190": {"doc_hash": "18b3040846423ab949f05aae0432c8fddb49a2b1ca1da66e60defe313a9eddb2", "ref_doc_id": "69a0551c-60ad-4c34-ae4f-0ae8f7851336"}, "bb19552f-38d1-400c-9f1e-e7b4858fb6bc": {"doc_hash": "b3c03ac615c85db968fb45ab4e892f1fe809b152615e66917d1e84e22531c30d", "ref_doc_id": "ff15331f-a9e9-42ca-8bd0-30a9908edb88"}, "99f78064-4276-4c1d-8366-bc4b25c88256": {"doc_hash": "3735f82a12ba4e4f56f738ef46e22b25913e08d9d40fd74a078328ce72c08ff0", "ref_doc_id": "fa82cc69-2897-4bdb-9fca-34434cb18be6"}, "c965c1d2-e84a-48e9-a317-6e9f3af7f765": {"doc_hash": "dd41a0e671a4fbd83bd901e42e55a5b0db7c73524fddcd87a6ea9300015a3515", "ref_doc_id": "00393fdf-4fab-43c5-8f8e-43fa1eb29cb9"}, "ea29b0d6-44c4-43d3-a621-101044032bdc": {"doc_hash": "e48aa81b7b46603e19a6fbb0196d9b753c91b8cdf5294924e58de2b5e2d03653", "ref_doc_id": "16afe49f-2bdd-40d5-9a11-f8f605e0b3d7"}, "8ba9fe15-12be-435f-867d-c661bef5510a": {"doc_hash": "2e980418d81ed9297b3b51846ddcebbcea58b998393c1d9577fb53ce3a87ca4c", "ref_doc_id": "04689a52-3381-40b8-8f03-670abd4de8ce"}, "01cefc1d-91bf-45da-a8e3-a8fab968bd90": {"doc_hash": "6957778e4ef738dc991b91bda3bcb572362d2d44014e0133087acf7fa597d8ed", "ref_doc_id": "e0b2de8d-ff0e-46bb-a65a-ff5fa24e6c04"}, "a143a4e9-4514-4135-bfbb-5682eb8e9d82": {"doc_hash": "e8020109c48546c6194fceece6b9fd8bd755b4cb45fd334d30074ed63373be53", "ref_doc_id": "22238510-3d8c-489c-a495-0ed551a48373"}, "c289c8e2-48df-4542-93a4-113cb86866d5": {"doc_hash": "b3bd8ade2af776704f66adb4d994c65554dc731cd7ba4020b9717cab6ab978f6", "ref_doc_id": "783f1e0e-9646-4ea6-89bd-136891731be8"}, "b02b484a-d2e2-4ffe-afb5-21b40ddc0e98": {"doc_hash": "dd04cf1fe8ce045009943d8c1b20a4680dccd7832f14bf26104f526b21dd654b", "ref_doc_id": "34cae5d5-cfad-4c79-9e6b-c9b93cc92792"}, "496e75ef-ce18-4a73-982a-bfbe967d689e": {"doc_hash": "4c6c68ca930bf6f9cbc4f42bbb0b30ec51ccb6712e23cd654dc50cbf45e3f82c", "ref_doc_id": "97fa2ba9-78ff-43b5-878b-e1ed2e94aec1"}, "fa6c39ab-a34a-41f8-bffd-62e1ba6a504c": {"doc_hash": "05a8bdd9e9fb6db79a04050dcff2999523894e50e67ef75a65c341b9aa62044b", "ref_doc_id": "e17652b9-92a6-4961-96c8-79757b4f72a9"}, "1004246d-533d-4b44-a4d5-0636dc51b4a9": {"doc_hash": "175a85fa5981a58f4dbd341542b5a47610d9f4330afefeaaa909e679fbbca353", "ref_doc_id": "9bf55d31-e4a7-42f7-ac71-c11eb627537c"}, "4a1b5c72-5886-425c-a2f6-df56f830b1bf": {"doc_hash": "e87a131ccd7d70c7a63f6cd4b2ef308e7e0904c247148b0b0dedab5ef3c978d8", "ref_doc_id": "24eb089b-3e08-4b57-970e-4a7f47482506"}, "c7981b12-0071-4216-80f5-b4b41b3bbb5b": {"doc_hash": "4c2e43438f54833511e7c4f06fdc4959ee150d3e8d72d9dfb65cc356762c77bc", "ref_doc_id": "a169a083-f2f1-4129-a4c5-aa269e5f1df7"}, "3bfcc540-677c-46a6-9123-82667f6fe061": {"doc_hash": "4e1ccb82e65212c161ca668370bca53721cf45db0993e14c8fcc4a15957d0d12", "ref_doc_id": "a169a083-f2f1-4129-a4c5-aa269e5f1df7"}, "0a1c0dff-fd25-4427-8464-b2e918adf1b3": {"doc_hash": "8ddacc071b6e85cc849bba0555cb92a57dc30c3c4af23c03d1e2920d70f4e1e2", "ref_doc_id": "04fb0d13-6171-40bd-a899-e968c9d12a79"}, "340aac20-0b9c-40a4-828a-6a10ef0de9ec": {"doc_hash": "65f599864379b1124b5714971dcf2dccbc48c45f9c8ca6d7d11b99a7d5eb5533", "ref_doc_id": "04fb0d13-6171-40bd-a899-e968c9d12a79"}, "9d52f812-87a6-4e32-8a86-73b267e07108": {"doc_hash": "82248c503386a865513f18d21afd37d7695aab96d6d2cf430db34967fd54d97c", "ref_doc_id": "f26bc7d3-900f-4b71-871c-3623181653d5"}, "e97e0d8a-c29d-4ede-b324-a32682603031": {"doc_hash": "ef267e94f98c4d6e74aa14230442f8f6d0c8e5e442f57a595c7109b467ccedcf", "ref_doc_id": "179e64c6-0e98-4bcd-8a28-424b46b722ce"}, "56a59ba4-2755-4bea-9893-2ef2ec474538": {"doc_hash": "5b07e43274d4cebbb3a2ce5bd47b42b3aaa5a52a4ee17e305d27661168ff7bae", "ref_doc_id": "dd8c41dd-4f30-45aa-9f24-4c42187bd089"}, "8ea894ef-f21f-4dcc-a5e9-38fca91e0cd1": {"doc_hash": "89bb314aae5bbc0a3f18ed7a230f57822b0398170a583f0f7b6fa3e83811f2e9", "ref_doc_id": "dd8c41dd-4f30-45aa-9f24-4c42187bd089"}, "7961e64f-ad05-4abb-af1b-7322db79904b": {"doc_hash": "fa59a5a4ded3ff002c759ea798374fe753f0a22255a6b8257c2eb1d50b72409a", "ref_doc_id": "dfe24c78-87b5-49e3-b983-b08e80c0d34b"}, "de69e404-59ea-4d48-a457-ed50dfacad02": {"doc_hash": "0895b02f214bebaaf2fa884080460664a713a302dff1d8db3d33580400110721", "ref_doc_id": "dfe24c78-87b5-49e3-b983-b08e80c0d34b"}, "7d61efd0-b799-4c2d-a36e-98f9feea743e": {"doc_hash": "a34c6e97a30d6945de7eb0caa102e0302785695dcfbdeedea62a16440c26c6cb", "ref_doc_id": "a322d5e2-d268-4f39-b943-1bd36c92d831"}, "e1eddd56-2e7d-4b3b-aea3-37748cb2ac9a": {"doc_hash": "0db8a7a2f0598d89cecfbc8cb05f49fb493d3b9e8be897e5767826cc85f286b8", "ref_doc_id": "a322d5e2-d268-4f39-b943-1bd36c92d831"}, "ec6bd262-2a85-4505-8292-f247259a4da9": {"doc_hash": "6512d4cccd3b72be6c76ee1e1957c4acd3d7344320a497a35e6a91e49d31c1d1", "ref_doc_id": "a322d5e2-d268-4f39-b943-1bd36c92d831"}, "ab4ebb60-822a-44bd-a46a-df85f265f1b7": {"doc_hash": "f6b94b6f39323a234c2ec9a6595e7bf06c04f3f31bf35f1e4ca8e2dd98a17a71", "ref_doc_id": "28442dad-f08b-4696-bc2f-232f6e8e0d90"}, "0247b09b-ce30-4531-9586-5524455f0d50": {"doc_hash": "01e5646bfe07e7d284892d7c8fa1394265965701707ce99a27c69855e42e9c6b", "ref_doc_id": "28442dad-f08b-4696-bc2f-232f6e8e0d90"}, "29cfe172-438d-45f6-af66-903ab5e0788b": {"doc_hash": "f81ca9a567835167a32a9fe2d036e2a1c3f5b3ca0f11be8ffedc12e44859411d", "ref_doc_id": "03e2cd3e-53dc-430d-abef-8f3e3d41d4f1"}, "bf81f518-9ec6-4d16-b031-943277798f29": {"doc_hash": "c591533164b69cdd595eb367b3ba0f5d7d01c6af4daea980983dff8a727cfe80", "ref_doc_id": "03e2cd3e-53dc-430d-abef-8f3e3d41d4f1"}, "5636922c-3ddb-4892-9376-768782b8777c": {"doc_hash": "5f2cd57f4913691148d06bd78d618ee25435e7e0473ab4af7e9054f3774e11c1", "ref_doc_id": "75f70afd-2c93-41bc-91b4-9cca3f0d744c"}, "9d362fc9-1e95-4688-b73e-c27d22cf25aa": {"doc_hash": "d2cb79e5d61cf02712473d65afe4a0d42d636c6c0e7d45020272cbc632ca2ae3", "ref_doc_id": "75f70afd-2c93-41bc-91b4-9cca3f0d744c"}, "1aae2c9d-faaf-4d4b-b334-81ea497b1cb5": {"doc_hash": "cdc47c7d0a03bc937fdf19217a346234f83bcb9edb1bbff2ec3193e1cef576ab", "ref_doc_id": "75f70afd-2c93-41bc-91b4-9cca3f0d744c"}, "7066f7a6-7ce2-4e23-b32b-7e22f662be89": {"doc_hash": "4aac7b0daf41722bc37f857c898a8149f975584a09d5a144f53d2711e9a2110e", "ref_doc_id": "f62c0401-f1dc-487b-9e91-9115f13ffd4f"}, "2b0d1241-c4cd-4c88-9603-3de46457b937": {"doc_hash": "0f4eeee9eaa2feda41e3d7004c2159daa738041a7373661fa675293380189930", "ref_doc_id": "6281c9bd-bf64-43f2-bf9d-357e43b156d5"}, "6c07f1e3-18c7-4d68-9622-2a4405314879": {"doc_hash": "44f1ded951c2b636a4b159dae26e6e55aa0db2fd11e0a6abc842b99427754d92", "ref_doc_id": "6281c9bd-bf64-43f2-bf9d-357e43b156d5"}, "29401257-bce6-4192-bb06-c20fee4eabb6": {"doc_hash": "c37bae4392e5270a1eb91fa6442cf2c7cf6c824ae4fe0f569e6592b601844f42", "ref_doc_id": "6281c9bd-bf64-43f2-bf9d-357e43b156d5"}, "21cd10f5-c5ad-4ed1-b7cd-565561991094": {"doc_hash": "aa18ad1bbf8a155c839b8b16f61ee7d103600be7160b97c3213afdae776382e3", "ref_doc_id": "69ed1f35-9835-4cb7-9889-b1ac13b3e54b"}, "8d766d3f-3be9-4f92-a0ee-8681464e2c38": {"doc_hash": "d5901d4942c4d09f1f05dfe60db258db462622ca84fb087e100494e735e69485", "ref_doc_id": "69ed1f35-9835-4cb7-9889-b1ac13b3e54b"}, "e795da50-a35a-4b22-ba7b-23e5884b9846": {"doc_hash": "cda65487fc460244e36a46923130d9372396987c43f542ab326c5db98185d147", "ref_doc_id": "69ed1f35-9835-4cb7-9889-b1ac13b3e54b"}, "e7ef32dd-1286-414c-aba3-e7328e4cca04": {"doc_hash": "2b38df2d19c427c3a909456e873dd7feb2fdd1c5fa9b39910d23cfc49ccf8daf", "ref_doc_id": "62862598-7b5a-4f28-b474-34d071e70ab6"}, "e849645c-e8f3-445f-931c-4f4210763724": {"doc_hash": "2321254ab80f8a21f6d703f46e96f63403539167af174cc49f0a1d4db46f0149", "ref_doc_id": "62862598-7b5a-4f28-b474-34d071e70ab6"}, "fa3f3495-a93f-42e3-b661-e01522e4cc68": {"doc_hash": "d2daf8788b849048e3733bbd1067638b84ff36617c1c69be18dbdb882b7e2cdc", "ref_doc_id": "62862598-7b5a-4f28-b474-34d071e70ab6"}, "0ff938a9-43b5-48e3-b7ad-38cd82587432": {"doc_hash": "e710dfd4cdb7254d190b0f94ef638b5b1852bea3850cb9a8d059ba157b4e7e4f", "ref_doc_id": "781a2c44-b463-4705-b1b9-987c9aba0036"}, "8457a402-5fe7-438e-accf-f92bac836f5a": {"doc_hash": "72615e1934a781f639a6e7dc8bb5169cdfa112af473232b911e4c45ddcafb102", "ref_doc_id": "781a2c44-b463-4705-b1b9-987c9aba0036"}, "f1dd4086-3686-426d-91ce-bc336fea4ff8": {"doc_hash": "7c93d274cab99176c531d4d3db3c2c475899a7f14104d7698938cffec565480a", "ref_doc_id": "781a2c44-b463-4705-b1b9-987c9aba0036"}}, "docstore/data": {"e88c2564-ee00-4fdb-af7a-33c1f536f055": {"__data__": {"id_": "e88c2564-ee00-4fdb-af7a-33c1f536f055", "embedding": null, "metadata": {"page_label": "1", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23b43534-0f7c-441a-b00c-2a396fa97e13", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "4b0b8dee89c6084115417bf3a8d88536688597e098410c3100c10247dd45787c", "class_name": "RelatedNodeInfo"}}, "text": "Provided proper attribution is provided, Google hereby grants permission to\nreproduce the tables and figures in this paper solely for use in journalistic or\nscholarly works.\nAttention Is All You Need\nAshish Vaswani\u2217\nGoogle Brain\navaswani@google.comNoam Shazeer\u2217\nGoogle Brain\nnoam@google.comNiki Parmar\u2217\nGoogle Research\nnikip@google.comJakob Uszkoreit\u2217\nGoogle Research\nusz@google.com\nLlion Jones\u2217\nGoogle Research\nllion@google.comAidan N. Gomez\u2217 \u2020\nUniversity of Toronto\naidan@cs.toronto.edu\u0141ukasz Kaiser\u2217\nGoogle Brain\nlukaszkaiser@google.com\nIllia Polosukhin\u2217 \u2021\nillia.polosukhin@gmail.com\nAbstract\nThe dominant sequence transduction models are based on complex recurrent or\nconvolutional neural networks that include an encoder and a decoder. The best\nperforming models also connect the encoder and decoder through an attention\nmechanism. We propose a new simple network architecture, the Transformer,\nbased solely on attention mechanisms, dispensing with recurrence and convolutions\nentirely. Experiments on two machine translation tasks show these models to\nbe superior in quality while being more parallelizable and requiring significantly\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-\nto-German translation task, improving over the existing best results, including\nensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task,\nour model establishes a new single-model state-of-the-art BLEU score of 41.8 after\ntraining for 3.5 days on eight GPUs, a small fraction of the training costs of the\nbest models from the literature. We show that the Transformer generalizes well to\nother tasks by applying it successfully to English constituency parsing both with\nlarge and limited training data.\n\u2217Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\nthe effort to evaluate this idea. Ashish, with Illia, designed and implemented the first Transformer models and\nhas been crucially involved in every aspect of this work. Noam proposed scaled dot-product attention, multi-head\nattention and the parameter-free position representation and became the other person involved in nearly every\ndetail. Niki designed, implemented, tuned and evaluated countless model variants in our original codebase and\ntensor2tensor. Llion also experimented with novel model variants, was responsible for our initial codebase, and\nefficient inference and visualizations. Lukasz and Aidan spent countless long days designing various parts of and\nimplementing tensor2tensor, replacing our earlier codebase, greatly improving results and massively accelerating\nour research.\n\u2020Work performed while at Google Brain.\n\u2021Work performed while at Google Research.\n31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach, CA, USA.arXiv:1706.03762v7  [cs.CL]  2 Aug 2023", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42093df0-27ff-4f56-b4e4-2831c5c5e190": {"__data__": {"id_": "42093df0-27ff-4f56-b4e4-2831c5c5e190", "embedding": null, "metadata": {"page_label": "2", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69a0551c-60ad-4c34-ae4f-0ae8f7851336", "node_type": "4", "metadata": {"page_label": "2", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "18b3040846423ab949f05aae0432c8fddb49a2b1ca1da66e60defe313a9eddb2", "class_name": "RelatedNodeInfo"}}, "text": "1 Introduction\nRecurrent neural networks, long short-term memory [ 13] and gated recurrent [ 7] neural networks\nin particular, have been firmly established as state of the art approaches in sequence modeling and\ntransduction problems such as language modeling and machine translation [ 35,2,5]. Numerous\nefforts have since continued to push the boundaries of recurrent language models and encoder-decoder\narchitectures [38, 24, 15].\nRecurrent models typically factor computation along the symbol positions of the input and output\nsequences. Aligning the positions to steps in computation time, they generate a sequence of hidden\nstates ht, as a function of the previous hidden state ht\u22121and the input for position t. This inherently\nsequential nature precludes parallelization within training examples, which becomes critical at longer\nsequence lengths, as memory constraints limit batching across examples. Recent work has achieved\nsignificant improvements in computational efficiency through factorization tricks [ 21] and conditional\ncomputation [ 32], while also improving model performance in case of the latter. The fundamental\nconstraint of sequential computation, however, remains.\nAttention mechanisms have become an integral part of compelling sequence modeling and transduc-\ntion models in various tasks, allowing modeling of dependencies without regard to their distance in\nthe input or output sequences [ 2,19]. In all but a few cases [ 27], however, such attention mechanisms\nare used in conjunction with a recurrent network.\nIn this work we propose the Transformer, a model architecture eschewing recurrence and instead\nrelying entirely on an attention mechanism to draw global dependencies between input and output.\nThe Transformer allows for significantly more parallelization and can reach a new state of the art in\ntranslation quality after being trained for as little as twelve hours on eight P100 GPUs.\n2 Background\nThe goal of reducing sequential computation also forms the foundation of the Extended Neural GPU\n[16], ByteNet [ 18] and ConvS2S [ 9], all of which use convolutional neural networks as basic building\nblock, computing hidden representations in parallel for all input and output positions. In these models,\nthe number of operations required to relate signals from two arbitrary input or output positions grows\nin the distance between positions, linearly for ConvS2S and logarithmically for ByteNet. This makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence. Self-attention has been\nused successfully in a variety of tasks including reading comprehension, abstractive summarization,\ntextual entailment and learning task-independent sentence representations [4, 27, 28, 22].\nEnd-to-end memory networks are based on a recurrent attention mechanism instead of sequence-\naligned recurrence and have been shown to perform well on simple-language question answering and\nlanguage modeling tasks [34].\nTo the best of our knowledge, however, the Transformer is the first transduction model relying\nentirely on self-attention to compute representations of its input and output without using sequence-\naligned RNNs or convolution. In the following sections, we will describe the Transformer, motivate\nself-attention and discuss its advantages over models such as [17, 18] and [9].\n3 Model Architecture\nMost competitive neural sequence transduction models have an encoder-decoder structure [ 5,2,35].\nHere, the encoder maps an input sequence of symbol representations (x1, ..., x n)to a sequence\nof continuous representations z= (z1, ..., z n). Given z, the decoder then generates an output\nsequence (y1, ..., y m)of symbols one element at a time. At each step the model is auto-regressive\n[10], consuming the previously generated symbols as additional input when generating the next.\n2", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb19552f-38d1-400c-9f1e-e7b4858fb6bc": {"__data__": {"id_": "bb19552f-38d1-400c-9f1e-e7b4858fb6bc", "embedding": null, "metadata": {"page_label": "3", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff15331f-a9e9-42ca-8bd0-30a9908edb88", "node_type": "4", "metadata": {"page_label": "3", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "b3c03ac615c85db968fb45ab4e892f1fe809b152615e66917d1e84e22531c30d", "class_name": "RelatedNodeInfo"}}, "text": "Figure 1: The Transformer - model architecture.\nThe Transformer follows this overall architecture using stacked self-attention and point-wise, fully\nconnected layers for both the encoder and decoder, shown in the left and right halves of Figure 1,\nrespectively.\n3.1 Encoder and Decoder Stacks\nEncoder: The encoder is composed of a stack of N= 6 identical layers. Each layer has two\nsub-layers. The first is a multi-head self-attention mechanism, and the second is a simple, position-\nwise fully connected feed-forward network. We employ a residual connection [ 11] around each of\nthe two sub-layers, followed by layer normalization [ 1]. That is, the output of each sub-layer is\nLayerNorm( x+ Sublayer( x)), where Sublayer( x)is the function implemented by the sub-layer\nitself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding\nlayers, produce outputs of dimension dmodel = 512 .\nDecoder: The decoder is also composed of a stack of N= 6identical layers. In addition to the two\nsub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head\nattention over the output of the encoder stack. Similar to the encoder, we employ residual connections\naround each of the sub-layers, followed by layer normalization. We also modify the self-attention\nsub-layer in the decoder stack to prevent positions from attending to subsequent positions. This\nmasking, combined with fact that the output embeddings are offset by one position, ensures that the\npredictions for position ican depend only on the known outputs at positions less than i.\n3.2 Attention\nAn attention function can be described as mapping a query and a set of key-value pairs to an output,\nwhere the query, keys, values, and output are all vectors. The output is computed as a weighted sum\n3", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99f78064-4276-4c1d-8366-bc4b25c88256": {"__data__": {"id_": "99f78064-4276-4c1d-8366-bc4b25c88256", "embedding": null, "metadata": {"page_label": "4", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa82cc69-2897-4bdb-9fca-34434cb18be6", "node_type": "4", "metadata": {"page_label": "4", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "3735f82a12ba4e4f56f738ef46e22b25913e08d9d40fd74a078328ce72c08ff0", "class_name": "RelatedNodeInfo"}}, "text": "Scaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention \"Scaled Dot-Product Attention\" (Figure 2). The input consists of\nqueries and keys of dimension dk, and values of dimension dv. We compute the dot products of the\nquery with all keys, divide each by\u221adk, and apply a softmax function to obtain the weights on the\nvalues.\nIn practice, we compute the attention function on a set of queries simultaneously, packed together\ninto a matrix Q. The keys and values are also packed together into matrices KandV. We compute\nthe matrix of outputs as:\nAttention( Q, K, V ) = softmax(QKT\n\u221adk)V (1)\nThe two most commonly used attention functions are additive attention [ 2], and dot-product (multi-\nplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor\nof1\u221adk. Additive attention computes the compatibility function using a feed-forward network with\na single hidden layer. While the two are similar in theoretical complexity, dot-product attention is\nmuch faster and more space-efficient in practice, since it can be implemented using highly optimized\nmatrix multiplication code.\nWhile for small values of dkthe two mechanisms perform similarly, additive attention outperforms\ndot product attention without scaling for larger values of dk[3]. We suspect that for large values of\ndk, the dot products grow large in magnitude, pushing the softmax function into regions where it has\nextremely small gradients4. To counteract this effect, we scale the dot products by1\u221adk.\n3.2.2 Multi-Head Attention\nInstead of performing a single attention function with dmodel-dimensional keys, values and queries,\nwe found it beneficial to linearly project the queries, keys and values htimes with different, learned\nlinear projections to dk,dkanddvdimensions, respectively. On each of these projected versions of\nqueries, keys and values we then perform the attention function in parallel, yielding dv-dimensional\n4To illustrate why the dot products get large, assume that the components of qandkare independent random\nvariables with mean 0and variance 1. Then their dot product, q\u00b7k=Pdk\ni=1qiki, has mean 0and variance dk.\n4", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c965c1d2-e84a-48e9-a317-6e9f3af7f765": {"__data__": {"id_": "c965c1d2-e84a-48e9-a317-6e9f3af7f765", "embedding": null, "metadata": {"page_label": "5", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00393fdf-4fab-43c5-8f8e-43fa1eb29cb9", "node_type": "4", "metadata": {"page_label": "5", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "dd41a0e671a4fbd83bd901e42e55a5b0db7c73524fddcd87a6ea9300015a3515", "class_name": "RelatedNodeInfo"}}, "text": "output values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\nMultiHead( Q, K, V ) = Concat(head 1, ...,head h)WO\nwhere head i= Attention( QWQ\ni, KWK\ni, V WV\ni)\nWhere the projections are parameter matrices WQ\ni\u2208Rdmodel\u00d7dk,WK\ni\u2208Rdmodel\u00d7dk,WV\ni\u2208Rdmodel\u00d7dv\nandWO\u2208Rhdv\u00d7dmodel.\nIn this work we employ h= 8 parallel attention layers, or heads. For each of these we use\ndk=dv=dmodel/h= 64 . Due to the reduced dimension of each head, the total computational cost\nis similar to that of single-head attention with full dimensionality.\n3.2.3 Applications of Attention in our Model\nThe Transformer uses multi-head attention in three different ways:\n\u2022In \"encoder-decoder attention\" layers, the queries come from the previous decoder layer,\nand the memory keys and values come from the output of the encoder. This allows every\nposition in the decoder to attend over all positions in the input sequence. This mimics the\ntypical encoder-decoder attention mechanisms in sequence-to-sequence models such as\n[38, 2, 9].\n\u2022The encoder contains self-attention layers. In a self-attention layer all of the keys, values\nand queries come from the same place, in this case, the output of the previous layer in the\nencoder. Each position in the encoder can attend to all positions in the previous layer of the\nencoder.\n\u2022Similarly, self-attention layers in the decoder allow each position in the decoder to attend to\nall positions in the decoder up to and including that position. We need to prevent leftward\ninformation flow in the decoder to preserve the auto-regressive property. We implement this\ninside of scaled dot-product attention by masking out (setting to \u2212\u221e) all values in the input\nof the softmax which correspond to illegal connections. See Figure 2.\n3.3 Position-wise Feed-Forward Networks\nIn addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully\nconnected feed-forward network, which is applied to each position separately and identically. This\nconsists of two linear transformations with a ReLU activation in between.\nFFN( x) = max(0 , xW 1+b1)W2+b2 (2)\nWhile the linear transformations are the same across different positions, they use different parameters\nfrom layer to layer. Another way of describing this is as two convolutions with kernel size 1.\nThe dimensionality of input and output is dmodel = 512 , and the inner-layer has dimensionality\ndff= 2048 .\n3.4 Embeddings and Softmax\nSimilarly to other sequence transduction models, we use learned embeddings to convert the input\ntokens and output tokens to vectors of dimension dmodel. We also use the usual learned linear transfor-\nmation and softmax function to convert the decoder output to predicted next-token probabilities. In\nour model, we share the same weight matrix between the two embedding layers and the pre-softmax\nlinear transformation, similar to [ 30]. In the embedding layers, we multiply those weights by\u221admodel.\n5", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea29b0d6-44c4-43d3-a621-101044032bdc": {"__data__": {"id_": "ea29b0d6-44c4-43d3-a621-101044032bdc", "embedding": null, "metadata": {"page_label": "6", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16afe49f-2bdd-40d5-9a11-f8f605e0b3d7", "node_type": "4", "metadata": {"page_label": "6", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "e48aa81b7b46603e19a6fbb0196d9b753c91b8cdf5294924e58de2b5e2d03653", "class_name": "RelatedNodeInfo"}}, "text": "Table 1: Maximum path lengths, per-layer complexity and minimum number of sequential operations\nfor different layer types. nis the sequence length, dis the representation dimension, kis the kernel\nsize of convolutions and rthe size of the neighborhood in restricted self-attention.\nLayer Type Complexity per Layer Sequential Maximum Path Length\nOperations\nSelf-Attention O(n2\u00b7d) O(1) O(1)\nRecurrent O(n\u00b7d2) O(n) O(n)\nConvolutional O(k\u00b7n\u00b7d2) O(1) O(logk(n))\nSelf-Attention (restricted) O(r\u00b7n\u00b7d) O(1) O(n/r)\n3.5 Positional Encoding\nSince our model contains no recurrence and no convolution, in order for the model to make use of the\norder of the sequence, we must inject some information about the relative or absolute position of the\ntokens in the sequence. To this end, we add \"positional encodings\" to the input embeddings at the\nbottoms of the encoder and decoder stacks. The positional encodings have the same dimension dmodel\nas the embeddings, so that the two can be summed. There are many choices of positional encodings,\nlearned and fixed [9].\nIn this work, we use sine and cosine functions of different frequencies:\nPE(pos,2i)=sin(pos/100002i/d model)\nPE(pos,2i+1)=cos(pos/100002i/d model)\nwhere posis the position and iis the dimension. That is, each dimension of the positional encoding\ncorresponds to a sinusoid. The wavelengths form a geometric progression from 2\u03c0to10000 \u00b72\u03c0. We\nchose this function because we hypothesized it would allow the model to easily learn to attend by\nrelative positions, since for any fixed offset k,PEpos+kcan be represented as a linear function of\nPEpos.\nWe also experimented with using learned positional embeddings [ 9] instead, and found that the two\nversions produced nearly identical results (see Table 3 row (E)). We chose the sinusoidal version\nbecause it may allow the model to extrapolate to sequence lengths longer than the ones encountered\nduring training.\n4 Why Self-Attention\nIn this section we compare various aspects of self-attention layers to the recurrent and convolu-\ntional layers commonly used for mapping one variable-length sequence of symbol representations\n(x1, ..., x n)to another sequence of equal length (z1, ..., z n), with xi, zi\u2208Rd, such as a hidden\nlayer in a typical sequence transduction encoder or decoder. Motivating our use of self-attention we\nconsider three desiderata.\nOne is the total computational complexity per layer. Another is the amount of computation that can\nbe parallelized, as measured by the minimum number of sequential operations required.\nThe third is the path length between long-range dependencies in the network. Learning long-range\ndependencies is a key challenge in many sequence transduction tasks. One key factor affecting the\nability to learn such dependencies is the length of the paths forward and backward signals have to\ntraverse in the network. The shorter these paths between any combination of positions in the input\nand output sequences, the easier it is to learn long-range dependencies [ 12]. Hence we also compare\nthe maximum path length between any two input and output positions in networks composed of the\ndifferent layer types.\nAs noted in Table 1, a self-attention layer connects all positions with a constant number of sequentially\nexecuted operations, whereas a recurrent layer requires O(n)sequential operations. In terms of\ncomputational complexity, self-attention layers are faster than recurrent layers when the sequence\n6", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3448, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ba9fe15-12be-435f-867d-c661bef5510a": {"__data__": {"id_": "8ba9fe15-12be-435f-867d-c661bef5510a", "embedding": null, "metadata": {"page_label": "7", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04689a52-3381-40b8-8f03-670abd4de8ce", "node_type": "4", "metadata": {"page_label": "7", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "2e980418d81ed9297b3b51846ddcebbcea58b998393c1d9577fb53ce3a87ca4c", "class_name": "RelatedNodeInfo"}}, "text": "length nis smaller than the representation dimensionality d, which is most often the case with\nsentence representations used by state-of-the-art models in machine translations, such as word-piece\n[38] and byte-pair [ 31] representations. To improve computational performance for tasks involving\nvery long sequences, self-attention could be restricted to considering only a neighborhood of size rin\nthe input sequence centered around the respective output position. This would increase the maximum\npath length to O(n/r). We plan to investigate this approach further in future work.\nA single convolutional layer with kernel width k < n does not connect all pairs of input and output\npositions. Doing so requires a stack of O(n/k)convolutional layers in the case of contiguous kernels,\norO(logk(n))in the case of dilated convolutions [ 18], increasing the length of the longest paths\nbetween any two positions in the network. Convolutional layers are generally more expensive than\nrecurrent layers, by a factor of k. Separable convolutions [ 6], however, decrease the complexity\nconsiderably, to O(k\u00b7n\u00b7d+n\u00b7d2). Even with k=n, however, the complexity of a separable\nconvolution is equal to the combination of a self-attention layer and a point-wise feed-forward layer,\nthe approach we take in our model.\nAs side benefit, self-attention could yield more interpretable models. We inspect attention distributions\nfrom our models and present and discuss examples in the appendix. Not only do individual attention\nheads clearly learn to perform different tasks, many appear to exhibit behavior related to the syntactic\nand semantic structure of the sentences.\n5 Training\nThis section describes the training regime for our models.\n5.1 Training Data and Batching\nWe trained on the standard WMT 2014 English-German dataset consisting of about 4.5 million\nsentence pairs. Sentences were encoded using byte-pair encoding [ 3], which has a shared source-\ntarget vocabulary of about 37000 tokens. For English-French, we used the significantly larger WMT\n2014 English-French dataset consisting of 36M sentences and split tokens into a 32000 word-piece\nvocabulary [ 38]. Sentence pairs were batched together by approximate sequence length. Each training\nbatch contained a set of sentence pairs containing approximately 25000 source tokens and 25000\ntarget tokens.\n5.2 Hardware and Schedule\nWe trained our models on one machine with 8 NVIDIA P100 GPUs. For our base models using\nthe hyperparameters described throughout the paper, each training step took about 0.4 seconds. We\ntrained the base models for a total of 100,000 steps or 12 hours. For our big models,(described on the\nbottom line of table 3), step time was 1.0 seconds. The big models were trained for 300,000 steps\n(3.5 days).\n5.3 Optimizer\nWe used the Adam optimizer [ 20] with \u03b21= 0.9,\u03b22= 0.98and\u03f5= 10\u22129. We varied the learning\nrate over the course of training, according to the formula:\nlrate =d\u22120.5\nmodel\u00b7min(step_num\u22120.5, step _num\u00b7warmup _steps\u22121.5) (3)\nThis corresponds to increasing the learning rate linearly for the first warmup _steps training steps,\nand decreasing it thereafter proportionally to the inverse square root of the step number. We used\nwarmup _steps = 4000 .\n5.4 Regularization\nWe employ three types of regularization during training:\n7", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3305, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01cefc1d-91bf-45da-a8e3-a8fab968bd90": {"__data__": {"id_": "01cefc1d-91bf-45da-a8e3-a8fab968bd90", "embedding": null, "metadata": {"page_label": "8", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0b2de8d-ff0e-46bb-a65a-ff5fa24e6c04", "node_type": "4", "metadata": {"page_label": "8", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "6957778e4ef738dc991b91bda3bcb572362d2d44014e0133087acf7fa597d8ed", "class_name": "RelatedNodeInfo"}}, "text": "Table 2: The Transformer achieves better BLEU scores than previous state-of-the-art models on the\nEnglish-to-German and English-to-French newstest2014 tests at a fraction of the training cost.\nModelBLEU Training Cost (FLOPs)\nEN-DE EN-FR EN-DE EN-FR\nByteNet [18] 23.75\nDeep-Att + PosUnk [39] 39.2 1.0\u00b71020\nGNMT + RL [38] 24.6 39.92 2.3\u00b710191.4\u00b71020\nConvS2S [9] 25.16 40.46 9.6\u00b710181.5\u00b71020\nMoE [32] 26.03 40.56 2.0\u00b710191.2\u00b71020\nDeep-Att + PosUnk Ensemble [39] 40.4 8.0\u00b71020\nGNMT + RL Ensemble [38] 26.30 41.16 1.8\u00b710201.1\u00b71021\nConvS2S Ensemble [9] 26.36 41.29 7.7\u00b710191.2\u00b71021\nTransformer (base model) 27.3 38.1 3.3\u00b71018\nTransformer (big) 28.4 41.8 2.3\u00b71019\nResidual Dropout We apply dropout [ 33] to the output of each sub-layer, before it is added to the\nsub-layer input and normalized. In addition, we apply dropout to the sums of the embeddings and the\npositional encodings in both the encoder and decoder stacks. For the base model, we use a rate of\nPdrop= 0.1.\nLabel Smoothing During training, we employed label smoothing of value \u03f5ls= 0.1[36]. This\nhurts perplexity, as the model learns to be more unsure, but improves accuracy and BLEU score.\n6 Results\n6.1 Machine Translation\nOn the WMT 2014 English-to-German translation task, the big transformer model (Transformer (big)\nin Table 2) outperforms the best previously reported models (including ensembles) by more than 2.0\nBLEU, establishing a new state-of-the-art BLEU score of 28.4. The configuration of this model is\nlisted in the bottom line of Table 3. Training took 3.5days on 8P100 GPUs. Even our base model\nsurpasses all previously published models and ensembles, at a fraction of the training cost of any of\nthe competitive models.\nOn the WMT 2014 English-to-French translation task, our big model achieves a BLEU score of 41.0,\noutperforming all of the previously published single models, at less than 1/4the training cost of the\nprevious state-of-the-art model. The Transformer (big) model trained for English-to-French used\ndropout rate Pdrop= 0.1, instead of 0.3.\nFor the base models, we used a single model obtained by averaging the last 5 checkpoints, which\nwere written at 10-minute intervals. For the big models, we averaged the last 20 checkpoints. We\nused beam search with a beam size of 4and length penalty \u03b1= 0.6[38]. These hyperparameters\nwere chosen after experimentation on the development set. We set the maximum output length during\ninference to input length + 50, but terminate early when possible [38].\nTable 2 summarizes our results and compares our translation quality and training costs to other model\narchitectures from the literature. We estimate the number of floating point operations used to train a\nmodel by multiplying the training time, the number of GPUs used, and an estimate of the sustained\nsingle-precision floating-point capacity of each GPU5.\n6.2 Model Variations\nTo evaluate the importance of different components of the Transformer, we varied our base model\nin different ways, measuring the change in performance on English-to-German translation on the\n5We used values of 2.8, 3.7, 6.0 and 9.5 TFLOPS for K80, K40, M40 and P100, respectively.\n8", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3149, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a143a4e9-4514-4135-bfbb-5682eb8e9d82": {"__data__": {"id_": "a143a4e9-4514-4135-bfbb-5682eb8e9d82", "embedding": null, "metadata": {"page_label": "9", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22238510-3d8c-489c-a495-0ed551a48373", "node_type": "4", "metadata": {"page_label": "9", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "e8020109c48546c6194fceece6b9fd8bd755b4cb45fd334d30074ed63373be53", "class_name": "RelatedNodeInfo"}}, "text": "Table 3: Variations on the Transformer architecture. Unlisted values are identical to those of the base\nmodel. All metrics are on the English-to-German translation development set, newstest2013. Listed\nperplexities are per-wordpiece, according to our byte-pair encoding, and should not be compared to\nper-word perplexities.\nN d model dff h d k dvPdrop \u03f5lstrain PPL BLEU params\nsteps (dev) (dev) \u00d7106\nbase 6 512 2048 8 64 64 0.1 0.1 100K 4.92 25.8 65\n(A)1 512 512 5.29 24.9\n4 128 128 5.00 25.5\n16 32 32 4.91 25.8\n32 16 16 5.01 25.4\n(B)16 5.16 25.1 58\n32 5.01 25.4 60\n(C)2 6.11 23.7 36\n4 5.19 25.3 50\n8 4.88 25.5 80\n256 32 32 5.75 24.5 28\n1024 128 128 4.66 26.0 168\n1024 5.12 25.4 53\n4096 4.75 26.2 90\n(D)0.0 5.77 24.6\n0.2 4.95 25.5\n0.0 4.67 25.3\n0.2 5.47 25.7\n(E) positional embedding instead of sinusoids 4.92 25.7\nbig 6 1024 4096 16 0.3 300K 4.33 26.4 213\ndevelopment set, newstest2013. We used beam search as described in the previous section, but no\ncheckpoint averaging. We present these results in Table 3.\nIn Table 3 rows (A), we vary the number of attention heads and the attention key and value dimensions,\nkeeping the amount of computation constant, as described in Section 3.2.2. While single-head\nattention is 0.9 BLEU worse than the best setting, quality also drops off with too many heads.\nIn Table 3 rows (B), we observe that reducing the attention key size dkhurts model quality. This\nsuggests that determining compatibility is not easy and that a more sophisticated compatibility\nfunction than dot product may be beneficial. We further observe in rows (C) and (D) that, as expected,\nbigger models are better, and dropout is very helpful in avoiding over-fitting. In row (E) we replace our\nsinusoidal positional encoding with learned positional embeddings [ 9], and observe nearly identical\nresults to the base model.\n6.3 English Constituency Parsing\nTo evaluate if the Transformer can generalize to other tasks we performed experiments on English\nconstituency parsing. This task presents specific challenges: the output is subject to strong structural\nconstraints and is significantly longer than the input. Furthermore, RNN sequence-to-sequence\nmodels have not been able to attain state-of-the-art results in small-data regimes [37].\nWe trained a 4-layer transformer with dmodel = 1024 on the Wall Street Journal (WSJ) portion of the\nPenn Treebank [ 25], about 40K training sentences. We also trained it in a semi-supervised setting,\nusing the larger high-confidence and BerkleyParser corpora from with approximately 17M sentences\n[37]. We used a vocabulary of 16K tokens for the WSJ only setting and a vocabulary of 32K tokens\nfor the semi-supervised setting.\nWe performed only a small number of experiments to select the dropout, both attention and residual\n(section 5.4), learning rates and beam size on the Section 22 development set, all other parameters\nremained unchanged from the English-to-German base translation model. During inference, we\n9", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2969, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c289c8e2-48df-4542-93a4-113cb86866d5": {"__data__": {"id_": "c289c8e2-48df-4542-93a4-113cb86866d5", "embedding": null, "metadata": {"page_label": "10", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "783f1e0e-9646-4ea6-89bd-136891731be8", "node_type": "4", "metadata": {"page_label": "10", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "b3bd8ade2af776704f66adb4d994c65554dc731cd7ba4020b9717cab6ab978f6", "class_name": "RelatedNodeInfo"}}, "text": "Table 4: The Transformer generalizes well to English constituency parsing (Results are on Section 23\nof WSJ)\nParser Training WSJ 23 F1\nVinyals & Kaiser el al. (2014) [37] WSJ only, discriminative 88.3\nPetrov et al. (2006) [29] WSJ only, discriminative 90.4\nZhu et al. (2013) [40] WSJ only, discriminative 90.4\nDyer et al. (2016) [8] WSJ only, discriminative 91.7\nTransformer (4 layers) WSJ only, discriminative 91.3\nZhu et al. (2013) [40] semi-supervised 91.3\nHuang & Harper (2009) [14] semi-supervised 91.3\nMcClosky et al. (2006) [26] semi-supervised 92.1\nVinyals & Kaiser el al. (2014) [37] semi-supervised 92.1\nTransformer (4 layers) semi-supervised 92.7\nLuong et al. (2015) [23] multi-task 93.0\nDyer et al. (2016) [8] generative 93.3\nincreased the maximum output length to input length + 300. We used a beam size of 21and\u03b1= 0.3\nfor both WSJ only and the semi-supervised setting.\nOur results in Table 4 show that despite the lack of task-specific tuning our model performs sur-\nprisingly well, yielding better results than all previously reported models with the exception of the\nRecurrent Neural Network Grammar [8].\nIn contrast to RNN sequence-to-sequence models [ 37], the Transformer outperforms the Berkeley-\nParser [29] even when training only on the WSJ training set of 40K sentences.\n7 Conclusion\nIn this work, we presented the Transformer, the first sequence transduction model based entirely on\nattention, replacing the recurrent layers most commonly used in encoder-decoder architectures with\nmulti-headed self-attention.\nFor translation tasks, the Transformer can be trained significantly faster than architectures based\non recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014\nEnglish-to-French translation tasks, we achieve a new state of the art. In the former task our best\nmodel outperforms even all previously reported ensembles.\nWe are excited about the future of attention-based models and plan to apply them to other tasks. We\nplan to extend the Transformer to problems involving input and output modalities other than text and\nto investigate local, restricted attention mechanisms to efficiently handle large inputs and outputs\nsuch as images, audio and video. Making generation less sequential is another research goals of ours.\nThe code we used to train and evaluate our models is available at https://github.com/\ntensorflow/tensor2tensor .\nAcknowledgements We are grateful to Nal Kalchbrenner and Stephan Gouws for their fruitful\ncomments, corrections and inspiration.\nReferences\n[1]Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer normalization. arXiv preprint\narXiv:1607.06450 , 2016.\n[2]Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly\nlearning to align and translate. CoRR , abs/1409.0473, 2014.\n[3]Denny Britz, Anna Goldie, Minh-Thang Luong, and Quoc V . Le. Massive exploration of neural\nmachine translation architectures. CoRR , abs/1703.03906, 2017.\n[4]Jianpeng Cheng, Li Dong, and Mirella Lapata. Long short-term memory-networks for machine\nreading. arXiv preprint arXiv:1601.06733 , 2016.\n10", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b02b484a-d2e2-4ffe-afb5-21b40ddc0e98": {"__data__": {"id_": "b02b484a-d2e2-4ffe-afb5-21b40ddc0e98", "embedding": null, "metadata": {"page_label": "11", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34cae5d5-cfad-4c79-9e6b-c9b93cc92792", "node_type": "4", "metadata": {"page_label": "11", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "dd04cf1fe8ce045009943d8c1b20a4680dccd7832f14bf26104f526b21dd654b", "class_name": "RelatedNodeInfo"}}, "text": "[5]Kyunghyun Cho, Bart van Merrienboer, Caglar Gulcehre, Fethi Bougares, Holger Schwenk,\nand Yoshua Bengio. Learning phrase representations using rnn encoder-decoder for statistical\nmachine translation. CoRR , abs/1406.1078, 2014.\n[6]Francois Chollet. Xception: Deep learning with depthwise separable convolutions. arXiv\npreprint arXiv:1610.02357 , 2016.\n[7]Junyoung Chung, \u00c7aglar G\u00fcl\u00e7ehre, Kyunghyun Cho, and Yoshua Bengio. Empirical evaluation\nof gated recurrent neural networks on sequence modeling. CoRR , abs/1412.3555, 2014.\n[8]Chris Dyer, Adhiguna Kuncoro, Miguel Ballesteros, and Noah A. Smith. Recurrent neural\nnetwork grammars. In Proc. of NAACL , 2016.\n[9]Jonas Gehring, Michael Auli, David Grangier, Denis Yarats, and Yann N. Dauphin. Convolu-\ntional sequence to sequence learning. arXiv preprint arXiv:1705.03122v2 , 2017.\n[10] Alex Graves. Generating sequences with recurrent neural networks. arXiv preprint\narXiv:1308.0850 , 2013.\n[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for im-\nage recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern\nRecognition , pages 770\u2013778, 2016.\n[12] Sepp Hochreiter, Yoshua Bengio, Paolo Frasconi, and J\u00fcrgen Schmidhuber. Gradient flow in\nrecurrent nets: the difficulty of learning long-term dependencies, 2001.\n[13] Sepp Hochreiter and J\u00fcrgen Schmidhuber. Long short-term memory. Neural computation ,\n9(8):1735\u20131780, 1997.\n[14] Zhongqiang Huang and Mary Harper. Self-training PCFG grammars with latent annotations\nacross languages. In Proceedings of the 2009 Conference on Empirical Methods in Natural\nLanguage Processing , pages 832\u2013841. ACL, August 2009.\n[15] Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring\nthe limits of language modeling. arXiv preprint arXiv:1602.02410 , 2016.\n[16] \u0141ukasz Kaiser and Samy Bengio. Can active memory replace attention? In Advances in Neural\nInformation Processing Systems, (NIPS) , 2016.\n[17] \u0141ukasz Kaiser and Ilya Sutskever. Neural GPUs learn algorithms. In International Conference\non Learning Representations (ICLR) , 2016.\n[18] Nal Kalchbrenner, Lasse Espeholt, Karen Simonyan, Aaron van den Oord, Alex Graves, and Ko-\nray Kavukcuoglu. Neural machine translation in linear time. arXiv preprint arXiv:1610.10099v2 ,\n2017.\n[19] Yoon Kim, Carl Denton, Luong Hoang, and Alexander M. Rush. Structured attention networks.\nInInternational Conference on Learning Representations , 2017.\n[20] Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR , 2015.\n[21] Oleksii Kuchaiev and Boris Ginsburg. Factorization tricks for LSTM networks. arXiv preprint\narXiv:1703.10722 , 2017.\n[22] Zhouhan Lin, Minwei Feng, Cicero Nogueira dos Santos, Mo Yu, Bing Xiang, Bowen\nZhou, and Yoshua Bengio. A structured self-attentive sentence embedding. arXiv preprint\narXiv:1703.03130 , 2017.\n[23] Minh-Thang Luong, Quoc V . Le, Ilya Sutskever, Oriol Vinyals, and Lukasz Kaiser. Multi-task\nsequence to sequence learning. arXiv preprint arXiv:1511.06114 , 2015.\n[24] Minh-Thang Luong, Hieu Pham, and Christopher D Manning. Effective approaches to attention-\nbased neural machine translation. arXiv preprint arXiv:1508.04025 , 2015.\n11", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "496e75ef-ce18-4a73-982a-bfbe967d689e": {"__data__": {"id_": "496e75ef-ce18-4a73-982a-bfbe967d689e", "embedding": null, "metadata": {"page_label": "12", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97fa2ba9-78ff-43b5-878b-e1ed2e94aec1", "node_type": "4", "metadata": {"page_label": "12", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "4c6c68ca930bf6f9cbc4f42bbb0b30ec51ccb6712e23cd654dc50cbf45e3f82c", "class_name": "RelatedNodeInfo"}}, "text": "[25] Mitchell P Marcus, Mary Ann Marcinkiewicz, and Beatrice Santorini. Building a large annotated\ncorpus of english: The penn treebank. Computational linguistics , 19(2):313\u2013330, 1993.\n[26] David McClosky, Eugene Charniak, and Mark Johnson. Effective self-training for parsing. In\nProceedings of the Human Language Technology Conference of the NAACL, Main Conference ,\npages 152\u2013159. ACL, June 2006.\n[27] Ankur Parikh, Oscar T\u00e4ckstr\u00f6m, Dipanjan Das, and Jakob Uszkoreit. A decomposable attention\nmodel. In Empirical Methods in Natural Language Processing , 2016.\n[28] Romain Paulus, Caiming Xiong, and Richard Socher. A deep reinforced model for abstractive\nsummarization. arXiv preprint arXiv:1705.04304 , 2017.\n[29] Slav Petrov, Leon Barrett, Romain Thibaux, and Dan Klein. Learning accurate, compact,\nand interpretable tree annotation. In Proceedings of the 21st International Conference on\nComputational Linguistics and 44th Annual Meeting of the ACL , pages 433\u2013440. ACL, July\n2006.\n[30] Ofir Press and Lior Wolf. Using the output embedding to improve language models. arXiv\npreprint arXiv:1608.05859 , 2016.\n[31] Rico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare words\nwith subword units. arXiv preprint arXiv:1508.07909 , 2015.\n[32] Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton,\nand Jeff Dean. Outrageously large neural networks: The sparsely-gated mixture-of-experts\nlayer. arXiv preprint arXiv:1701.06538 , 2017.\n[33] Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdi-\nnov. Dropout: a simple way to prevent neural networks from overfitting. Journal of Machine\nLearning Research , 15(1):1929\u20131958, 2014.\n[34] Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, and Rob Fergus. End-to-end memory\nnetworks. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors,\nAdvances in Neural Information Processing Systems 28 , pages 2440\u20132448. Curran Associates,\nInc., 2015.\n[35] Ilya Sutskever, Oriol Vinyals, and Quoc VV Le. Sequence to sequence learning with neural\nnetworks. In Advances in Neural Information Processing Systems , pages 3104\u20133112, 2014.\n[36] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, and Zbigniew Wojna.\nRethinking the inception architecture for computer vision. CoRR , abs/1512.00567, 2015.\n[37] Vinyals & Kaiser, Koo, Petrov, Sutskever, and Hinton. Grammar as a foreign language. In\nAdvances in Neural Information Processing Systems , 2015.\n[38] Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V Le, Mohammad Norouzi, Wolfgang\nMacherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, et al. Google\u2019s neural machine\ntranslation system: Bridging the gap between human and machine translation. arXiv preprint\narXiv:1609.08144 , 2016.\n[39] Jie Zhou, Ying Cao, Xuguang Wang, Peng Li, and Wei Xu. Deep recurrent models with\nfast-forward connections for neural machine translation. CoRR , abs/1606.04199, 2016.\n[40] Muhua Zhu, Yue Zhang, Wenliang Chen, Min Zhang, and Jingbo Zhu. Fast and accurate\nshift-reduce constituent parsing. In Proceedings of the 51st Annual Meeting of the ACL (Volume\n1: Long Papers) , pages 434\u2013443. ACL, August 2013.\n12", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa6c39ab-a34a-41f8-bffd-62e1ba6a504c": {"__data__": {"id_": "fa6c39ab-a34a-41f8-bffd-62e1ba6a504c", "embedding": null, "metadata": {"page_label": "13", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e17652b9-92a6-4961-96c8-79757b4f72a9", "node_type": "4", "metadata": {"page_label": "13", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "05a8bdd9e9fb6db79a04050dcff2999523894e50e67ef75a65c341b9aa62044b", "class_name": "RelatedNodeInfo"}}, "text": "Attention Visualizations\nInput-Input Layer5\nIt\nis\nin\nthis\nspirit\nthat\na\nmajority\nof\nAmerican\ngovernments\nhave\npassed\nnew\nlaws\nsince\n2009\nmaking\nthe\nregistration\nor\nvoting\nprocess\nmore\ndifficult\n.\n<EOS>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\nIt\nis\nin\nthis\nspirit\nthat\na\nmajority\nof\nAmerican\ngovernments\nhave\npassed\nnew\nlaws\nsince\n2009\nmaking\nthe\nregistration\nor\nvoting\nprocess\nmore\ndifficult\n.\n<EOS>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\n<pad>\nFigure 3: An example of the attention mechanism following long-distance dependencies in the\nencoder self-attention in layer 5 of 6. Many of the attention heads attend to a distant dependency of\nthe verb \u2018making\u2019, completing the phrase \u2018making...more difficult\u2019. Attentions here shown only for\nthe word \u2018making\u2019. Different colors represent different heads. Best viewed in color.\n13", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 812, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1004246d-533d-4b44-a4d5-0636dc51b4a9": {"__data__": {"id_": "1004246d-533d-4b44-a4d5-0636dc51b4a9", "embedding": null, "metadata": {"page_label": "14", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9bf55d31-e4a7-42f7-ac71-c11eb627537c", "node_type": "4", "metadata": {"page_label": "14", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "175a85fa5981a58f4dbd341542b5a47610d9f4330afefeaaa909e679fbbca353", "class_name": "RelatedNodeInfo"}}, "text": "Input-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nInput-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>Figure 4: Two attention heads, also in layer 5 of 6, apparently involved in anaphora resolution. Top:\nFull attentions for head 5. Bottom: Isolated attentions from just the word \u2018its\u2019 for attention heads 5\nand 6. Note that the attentions are very sharp for this word.\n14", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 814, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a1b5c72-5886-425c-a2f6-df56f830b1bf": {"__data__": {"id_": "4a1b5c72-5886-425c-a2f6-df56f830b1bf", "embedding": null, "metadata": {"page_label": "15", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24eb089b-3e08-4b57-970e-4a7f47482506", "node_type": "4", "metadata": {"page_label": "15", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "e87a131ccd7d70c7a63f6cd4b2ef308e7e0904c247148b0b0dedab5ef3c978d8", "class_name": "RelatedNodeInfo"}}, "text": "Input-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nInput-Input Layer5\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>\nThe\nLaw\nwill\nnever\nbe\nperfect\n,\nbut\nits\napplication\nshould\nbe\njust\n-\nthis\nis\nwhat\nwe\nare\nmissing\n,\nin\nmy\nopinion\n.\n<EOS>\n<pad>Figure 5: Many of the attention heads exhibit behaviour that seems related to the structure of the\nsentence. We give two such examples above, from two different heads from the encoder self-attention\nat layer 5 of 6. The heads clearly learned to perform different tasks.\n15", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7981b12-0071-4216-80f5-b4b41b3bbb5b": {"__data__": {"id_": "c7981b12-0071-4216-80f5-b4b41b3bbb5b", "embedding": null, "metadata": {"page_label": "1", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a169a083-f2f1-4129-a4c5-aa269e5f1df7", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "25773927dad1990aabe76590368ace1053fd101076a9296043142e2e0b295a02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bfcc540-677c-46a6-9123-82667f6fe061", "node_type": "1", "metadata": {}, "hash": "1c20c1be6078a8a96c0db7ca918a206e0bf6bede483af299890616f265a27757", "class_name": "RelatedNodeInfo"}}, "text": "YOLOv7: Trainable bag-of-freebies sets new state-of-the-art for real-time object\ndetectors\nChien-Yao Wang1, Alexey Bochkovskiy, and Hong-Yuan Mark Liao1\n1Institute of Information Science, Academia Sinica, Taiwan\nkinyiu@iis.sinica.edu.tw, alexeyab84@gmail.com, and liao@iis.sinica.edu.tw\nAbstract\nYOLOv7 surpasses all known object detectors in both\nspeed and accuracy in the range from 5 FPS to 160 FPS\nand has the highest accuracy 56.8% AP among all known\nreal-time object detectors with 30 FPS or higher on GPU\nV100. YOLOv7-E6 object detector (56 FPS V100, 55.9%\nAP) outperforms both transformer-based detector SWIN-\nL Cascade-Mask R-CNN (9.2 FPS A100, 53.9% AP) by\n509% in speed and 2% in accuracy, and convolutional-\nbased detector ConvNeXt-XL Cascade-Mask R-CNN (8.6\nFPS A100, 55.2% AP) by 551% in speed and 0.7% AP\nin accuracy, as well as YOLOv7 outperforms: YOLOR,\nYOLOX, Scaled-YOLOv4, YOLOv5, DETR, Deformable\nDETR, DINO-5scale-R50, ViT-Adapter-B and many other\nobject detectors in speed and accuracy. Moreover, we train\nYOLOv7 only on MS COCO dataset from scratch without\nusing any other datasets or pre-trained weights. Source\ncode is released in https://github.com/WongKinYiu/yolov7.\n1. Introduction\nReal-time object detection is a very important topic in\ncomputer vision, as it is often a necessary component in\ncomputer vision systems. For example, multi-object track-\ning [94, 93], autonomous driving [40, 18], robotics [35, 58],\nmedical image analysis [34, 46], etc. The computing de-\nvices that execute real-time object detection is usually some\nmobile CPU or GPU, as well as various neural processing\nunits (NPU) developed by major manufacturers. For exam-\nple, the Apple neural engine (Apple), the neural compute\nstick (Intel), Jetson AI edge devices (Nvidia), the edge TPU\n(Google), the neural processing engine (Qualcomm), the AI\nprocessing unit (MediaTek), and the AI SoCs (Kneron), are\nall NPUs. Some of the above mentioned edge devices focus\non speeding up different operations such as vanilla convolu-\ntion, depth-wise convolution, or MLP operations. In this pa-\nper, the real-time object detector we proposed mainly hopes\nthat it can support both mobile GPU and GPU devices from\nthe edge to the cloud.\nIn recent years, the real-time object detector is still de-\nveloped for different edge device. For example, the devel-\nFigure 1: Comparison with other real-time object detectors, our\nproposed methods achieve state-of-the-arts performance.\nopment of MCUNet [49, 48] and NanoDet [54] focused on\nproducing low-power single-chip and improving the infer-\nence speed on edge CPU. As for methods such as YOLOX\n[21] and YOLOR [81], they focus on improving the infer-\nence speed of various GPUs. More recently, the develop-\nment of real-time object detector has focused on the de-\nsign of ef\ufb01cient architecture. As for real-time object de-\ntectors that can be used on CPU [54, 88, 84, 83], their de-\nsign is mostly based on MobileNet [28, 66, 27], Shuf\ufb02eNet\n[92, 55], or GhostNet [25]. Another mainstream real-time\nobject detectors are developed for GPU [81, 21, 97], they\nmostly use ResNet [26], DarkNet [63], or DLA [87], and\nthen use the CSPNet [80] strategy to optimize the architec-\nture. The development direction of the proposed methods in\nthis paper are different from that of the current mainstream\nreal-time object detectors. In addition to architecture op-\ntimization, our proposed methods will focus on the opti-\nmization of the training process.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bfcc540-677c-46a6-9123-82667f6fe061": {"__data__": {"id_": "3bfcc540-677c-46a6-9123-82667f6fe061", "embedding": null, "metadata": {"page_label": "1", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a169a083-f2f1-4129-a4c5-aa269e5f1df7", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "25773927dad1990aabe76590368ace1053fd101076a9296043142e2e0b295a02", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7981b12-0071-4216-80f5-b4b41b3bbb5b", "node_type": "1", "metadata": {"page_label": "1", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "4c2e43438f54833511e7c4f06fdc4959ee150d3e8d72d9dfb65cc356762c77bc", "class_name": "RelatedNodeInfo"}}, "text": "As for real-time object de-\ntectors that can be used on CPU [54, 88, 84, 83], their de-\nsign is mostly based on MobileNet [28, 66, 27], Shuf\ufb02eNet\n[92, 55], or GhostNet [25]. Another mainstream real-time\nobject detectors are developed for GPU [81, 21, 97], they\nmostly use ResNet [26], DarkNet [63], or DLA [87], and\nthen use the CSPNet [80] strategy to optimize the architec-\nture. The development direction of the proposed methods in\nthis paper are different from that of the current mainstream\nreal-time object detectors. In addition to architecture op-\ntimization, our proposed methods will focus on the opti-\nmization of the training process. Our focus will be on some\noptimized modules and optimization methods which may\nstrengthen the training cost for improving the accuracy of\nobject detection, but without increasing the inference cost.\nWe call the proposed modules and optimization methods\ntrainable bag-of-freebies.\n1arXiv:2207.02696v1  [cs.CV]  6 Jul 2022", "mimetype": "text/plain", "start_char_idx": 2830, "end_char_idx": 3797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a1c0dff-fd25-4427-8464-b2e918adf1b3": {"__data__": {"id_": "0a1c0dff-fd25-4427-8464-b2e918adf1b3", "embedding": null, "metadata": {"page_label": "2", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb0d13-6171-40bd-a899-e968c9d12a79", "node_type": "4", "metadata": {"page_label": "2", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "8559eb018b450d1374a214e64c01c80d3f9e073fabc04a90656ede2b90b531eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "340aac20-0b9c-40a4-828a-6a10ef0de9ec", "node_type": "1", "metadata": {}, "hash": "b5b6725bacbcc7566a2a0ef27e028a631911ad471ef26d9608d1444c63063909", "class_name": "RelatedNodeInfo"}}, "text": "Recently, model re-parameterization [13, 12, 29] and dy-\nnamic label assignment [20, 17, 42] have become important\ntopics in network training and object detection. Mainly af-\nter the above new concepts are proposed, the training of\nobject detector evolves many new issues. In this paper, we\nwill present some of the new issues we have discovered and\ndevise effective methods to address them. For model re-\nparameterization, we analyze the model re-parameterization\nstrategies applicable to layers in different networks with the\nconcept of gradient propagation path, and propose planned\nre-parameterized model. In addition, when we discover that\nwith dynamic label assignment technology, the training of\nmodel with multiple output layers will generate new issues.\nThat is: \u201cHow to assign dynamic targets for the outputs of\ndifferent branches?\u201d For this problem, we propose a new\nlabel assignment method called coarse-to-\ufb01ne lead guided\nlabel assignment.\nThe contributions of this paper are summarized as fol-\nlows: (1) we design several trainable bag-of-freebies meth-\nods, so that real-time object detection can greatly improve\nthe detection accuracy without increasing the inference\ncost; (2) for the evolution of object detection methods, we\nfound two new issues, namely how re-parameterized mod-\nule replaces original module, and how dynamic label as-\nsignment strategy deals with assignment to different output\nlayers. In addition, we also propose methods to address the\ndif\ufb01culties arising from these issues; (3) we propose \u201cex-\ntend\u201d and \u201ccompound scaling\u201d methods for the real-time\nobject detector that can effectively utilize parameters and\ncomputation; and (4) the method we proposed can effec-\ntively reduce about 40% parameters and 50% computation\nof state-of-the-art real-time object detector, and has faster\ninference speed and higher detection accuracy.\n2. Related work\n2.1. Real-time object detectors\nCurrently state-of-the-art real-time object detectors are\nmainly based on YOLO [61, 62, 63] and FCOS [76, 77],\nwhich are [3, 79, 81, 21, 54, 85, 23]. Being able to become\na state-of-the-art real-time object detector usually requires\nthe following characteristics: (1) a faster and stronger net-\nwork architecture; (2) a more effective feature integration\nmethod [22, 97, 37, 74, 59, 30, 9, 45]; (3) a more accurate\ndetection method [76, 77, 69]; (4) a more robust loss func-\ntion [96, 64, 6, 56, 95, 57]; (5) a more ef\ufb01cient label assign-\nment method [99, 20, 17, 82, 42]; and (6) a more ef\ufb01cient\ntraining method. In this paper, we do not intend to explore\nself-supervised learning or knowledge distillation methods\nthat require additional data or large model. Instead, we will\ndesign new trainable bag-of-freebies method for the issues\nderived from the state-of-the-art methods associated with\n(4), (5), and (6) mentioned above.2.2. Model re-parameterization\nModel re-parametrization techniques [71, 31, 75, 19, 33,\n11, 4, 24, 13, 12, 10, 29, 14, 78] merge multiple compu-\ntational modules into one at inference stage. The model\nre-parameterization technique can be regarded as an en-\nsemble technique, and we can divide it into two cate-\ngories, i.e., module-level ensemble and model-level ensem-\nble. There are two common practices for model-level re-\nparameterization to obtain the \ufb01nal inference model. One\nis to train multiple identical models with different train-\ning data, and then average the weights of multiple trained\nmodels. The other is to perform a weighted average of the\nweights of models at different iteration number. Module-\nlevel re-parameterization is a more popular research issue\nrecently. This type of method splits a module into multi-\nple identical or different module branches during training\nand integrates multiple branched modules into a completely\nequivalent module during inference. However, not all pro-\nposed re-parameterized module can be perfectly applied to\ndifferent architectures. With this in mind, we have devel-\noped new re-parameterization module and designed related\napplication strategies for various architectures.\n2.3.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4083, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "340aac20-0b9c-40a4-828a-6a10ef0de9ec": {"__data__": {"id_": "340aac20-0b9c-40a4-828a-6a10ef0de9ec", "embedding": null, "metadata": {"page_label": "2", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb0d13-6171-40bd-a899-e968c9d12a79", "node_type": "4", "metadata": {"page_label": "2", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "8559eb018b450d1374a214e64c01c80d3f9e073fabc04a90656ede2b90b531eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a1c0dff-fd25-4427-8464-b2e918adf1b3", "node_type": "1", "metadata": {"page_label": "2", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "8ddacc071b6e85cc849bba0555cb92a57dc30c3c4af23c03d1e2920d70f4e1e2", "class_name": "RelatedNodeInfo"}}, "text": "There are two common practices for model-level re-\nparameterization to obtain the \ufb01nal inference model. One\nis to train multiple identical models with different train-\ning data, and then average the weights of multiple trained\nmodels. The other is to perform a weighted average of the\nweights of models at different iteration number. Module-\nlevel re-parameterization is a more popular research issue\nrecently. This type of method splits a module into multi-\nple identical or different module branches during training\nand integrates multiple branched modules into a completely\nequivalent module during inference. However, not all pro-\nposed re-parameterized module can be perfectly applied to\ndifferent architectures. With this in mind, we have devel-\noped new re-parameterization module and designed related\napplication strategies for various architectures.\n2.3. Model scaling\nModel scaling [72, 60, 74, 73, 15, 16, 2, 51] is a way\nto scale up or down an already designed model and make\nit \ufb01t in different computing devices. The model scaling\nmethod usually uses different scaling factors, such as reso-\nlution (size of input image), depth (number of layer), width\n(number of channel), and stage (number of feature pyra-\nmid), so as to achieve a good trade-off for the amount of\nnetwork parameters, computation, inference speed, and ac-\ncuracy. Network architecture search (NAS) is one of the\ncommonly used model scaling methods. NAS can automat-\nically search for suitable scaling factors from search space\nwithout de\ufb01ning too complicated rules. The disadvantage\nof NAS is that it requires very expensive computation to\ncomplete the search for model scaling factors. In [15], the\nresearcher analyzes the relationship between scaling factors\nand the amount of parameters and operations, trying to di-\nrectly estimate some rules, and thereby obtain the scaling\nfactors required by model scaling. Checking the literature,\nwe found that almost all model scaling methods analyze in-\ndividual scaling factor independently, and even the methods\nin the compound scaling category also optimized scaling\nfactor independently. The reason for this is because most\npopular NAS architectures deal with scaling factors that are\nnot very correlated. We observed that all concatenation-\nbased models, such as DenseNet [32] or V oVNet [39], will\nchange the input width of some layers when the depth of\nsuch models is scaled. Since the proposed architecture is\nconcatenation-based, we have to design a new compound\nscaling method for this model.\n2", "mimetype": "text/plain", "start_char_idx": 3220, "end_char_idx": 5750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d52f812-87a6-4e32-8a86-73b267e07108": {"__data__": {"id_": "9d52f812-87a6-4e32-8a86-73b267e07108", "embedding": null, "metadata": {"page_label": "3", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f26bc7d3-900f-4b71-871c-3623181653d5", "node_type": "4", "metadata": {"page_label": "3", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "82248c503386a865513f18d21afd37d7695aab96d6d2cf430db34967fd54d97c", "class_name": "RelatedNodeInfo"}}, "text": "Figure 2: Extended ef\ufb01cient layer aggregation networks. The proposed extended ELAN (E-ELAN) does not change the gradient transmis-\nsion path of the original architecture at all, but use group convolution to increase the cardinality of the added features, and combine the\nfeatures of different groups in a shuf\ufb02e and merge cardinality manner. This way of operation can enhance the features learned by different\nfeature maps and improve the use of parameters and calculations.\n3. Architecture\n3.1. Extended ef\ufb01cient layer aggregation networks\nIn most of the literature on designing the ef\ufb01cient ar-\nchitectures, the main considerations are no more than the\nnumber of parameters, the amount of computation, and the\ncomputational density. Starting from the characteristics of\nmemory access cost, Ma et al. [55] also analyzed the in-\n\ufb02uence of the input/output channel ratio, the number of\nbranches of the architecture, and the element-wise opera-\ntion on the network inference speed. Doll \u00b4aret al. [15] addi-\ntionally considered activation when performing model scal-\ning, that is, to put more consideration on the number of el-\nements in the output tensors of convolutional layers. The\ndesign of CSPV oVNet [79] in Figure 2 (b) is a variation of\nV oVNet [39]. In addition to considering the aforementioned\nbasic designing concerns, the architecture of CSPV oVNet\n[79] also analyzes the gradient path, in order to enable the\nweights of different layers to learn more diverse features.\nThe gradient analysis approach described above makes in-\nferences faster and more accurate. ELAN [1] in Figure 2 (c)\nconsiders the following design strategy \u2013 \u201cHow to design an\nef\ufb01cient network?.\u201d They came out with a conclusion: By\ncontrolling the shortest longest gradient path, a deeper net-\nwork can learn and converge effectively. In this paper, we\npropose Extended-ELAN (E-ELAN) based on ELAN and\nits main architecture is shown in Figure 2 (d).\nRegardless of the gradient path length and the stacking\nnumber of computational blocks in large-scale ELAN, it has\nreached a stable state. If more computational blocks are\nstacked unlimitedly, this stable state may be destroyed, and\nthe parameter utilization rate will decrease. The proposedE-ELAN uses expand, shuf\ufb02e, merge cardinality to achieve\nthe ability to continuously enhance the learning ability of\nthe network without destroying the original gradient path.\nIn terms of architecture, E-ELAN only changes the archi-\ntecture in computational block, while the architecture of\ntransition layer is completely unchanged. Our strategy is\nto use group convolution to expand the channel and car-\ndinality of computational blocks. We will apply the same\ngroup parameter and channel multiplier to all the compu-\ntational blocks of a computational layer. Then, the feature\nmap calculated by each computational block will be shuf-\n\ufb02ed into ggroups according to the set group parameter g,\nand then concatenate them together. At this time, the num-\nber of channels in each group of feature map will be the\nsame as the number of channels in the original architec-\nture. Finally, we add ggroups of feature maps to perform\nmerge cardinality. In addition to maintaining the original\nELAN design architecture, E-ELAN can also guide differ-\nent groups of computational blocks to learn more diverse\nfeatures.\n3.2. Model scaling for concatenation-based models\nThe main purpose of model scaling is to adjust some at-\ntributes of the model and generate models of different scales\nto meet the needs of different inference speeds. For ex-\nample the scaling model of Ef\ufb01cientNet [72] considers the\nwidth, depth, and resolution. As for the scaled-YOLOv4\n[79], its scaling model is to adjust the number of stages. In\n[15], Doll \u00b4aret al. analyzed the in\ufb02uence of vanilla convolu-\ntion and group convolution on the amount of parameter and\ncomputation when performing width and depth scaling, and\nused this to design the corresponding model scaling method.\n3", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3968, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e97e0d8a-c29d-4ede-b324-a32682603031": {"__data__": {"id_": "e97e0d8a-c29d-4ede-b324-a32682603031", "embedding": null, "metadata": {"page_label": "4", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "179e64c6-0e98-4bcd-8a28-424b46b722ce", "node_type": "4", "metadata": {"page_label": "4", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "ef267e94f98c4d6e74aa14230442f8f6d0c8e5e442f57a595c7109b467ccedcf", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3: Model scaling for concatenation-based models. From (a) to (b), we observe that when depth scaling is performed on\nconcatenation-based models, the output width of a computational block also increases. This phenomenon will cause the input width\nof the subsequent transmission layer to increase. Therefore, we propose (c), that is, when performing model scaling on concatenation-\nbased models, only the depth in a computational block needs to be scaled, and the remaining of transmission layer is performed with\ncorresponding width scaling.\nThe above methods are mainly used in architectures such as\nPlainNet or ResNet. When these architectures are in execut-\ning scaling up or scaling down, the in-degree and out-degree\nof each layer will not change, so we can independently an-\nalyze the impact of each scaling factor on the amount of\nparameters and computation. However, if these methods\nare applied to the concatenation-based architecture, we will\n\ufb01nd that when scaling up or scaling down is performed on\ndepth, the in-degree of a translation layer which is immedi-\nately after a concatenation-based computational block will\ndecrease or increase, as shown in Figure 3 (a) and (b).\nIt can be inferred from the above phenomenon that\nwe cannot analyze different scaling factors separately for\na concatenation-based model but must be considered to-\ngether. Take scaling-up depth as an example, such an ac-\ntion will cause a ratio change between the input channel and\noutput channel of a transition layer, which may lead to a de-\ncrease in the hardware usage of the model. Therefore, we\nmust propose the corresponding compound model scaling\nmethod for a concatenation-based model. When we scale\nthe depth factor of a computational block, we must also cal-\nculate the change of the output channel of that block. Then,\nwe will perform width factor scaling with the same amount\nof change on the transition layers, and the result is shown\nin Figure 3 (c). Our proposed compound scaling method\ncan maintain the properties that the model had at the initial\ndesign and maintains the optimal structure.\n4. Trainable bag-of-freebies\n4.1. Planned re-parameterized convolution\nAlthough RepConv [13] has achieved excellent perfor-\nmance on the VGG [68], when we directly apply it to\nResNet [26] and DenseNet [32] and other architectures,\nits accuracy will be signi\ufb01cantly reduced. We use gradi-\nent \ufb02ow propagation paths to analyze how re-parameterized\nconvolution should be combined with different network.\nWe also designed planned re-parameterized convolution ac-\ncordingly.\nFigure 4: Planned re-parameterized model. In the proposed\nplanned re-parameterized model, we found that a layer with resid-\nual or concatenation connections, its RepConv should not have\nidentity connection. Under these circumstances, it can be replaced\nby RepConvN that contains no identity connections.\nRepConv actually combines 3\u00023convolution, 1\u00021\nconvolution, and identity connection in one convolutional\nlayer. After analyzing the combination and correspond-\ning performance of RepConv and different architectures,\nwe \ufb01nd that the identity connection in RepConv destroys\nthe residual in ResNet and the concatenation in DenseNet,\nwhich provides more diversity of gradients for different fea-\nture maps. For the above reasons, we use RepConv with-\nout identity connection (RepConvN) to design the architec-\nture of planned re-parameterized convolution. In our think-\ning, when a convolutional layer with residual or concate-\nnation is replaced by re-parameterized convolution, there\nshould be no identity connection. Figure 4 shows an exam-\nple of our designed \u201cplanned re-parameterized convolution\u201d\nused in PlainNet and ResNet. As for the complete planned\nre-parameterized convolution experiment in residual-based\nmodel and concatenation-based model, it will be presented\nin the ablation study session.\n4", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3878, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56a59ba4-2755-4bea-9893-2ef2ec474538": {"__data__": {"id_": "56a59ba4-2755-4bea-9893-2ef2ec474538", "embedding": null, "metadata": {"page_label": "5", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd8c41dd-4f30-45aa-9f24-4c42187bd089", "node_type": "4", "metadata": {"page_label": "5", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "de4b8733aaf8715c6f927170e914cf6ecbf41bcaa7361395319515dca7599ae5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ea894ef-f21f-4dcc-a5e9-38fca91e0cd1", "node_type": "1", "metadata": {}, "hash": "12ae86d6af5e7ff0527db3d4455a3bc724c8707503bb8148ecd978f34caec5c8", "class_name": "RelatedNodeInfo"}}, "text": "Figure 5: Coarse for auxiliary and \ufb01ne for lead head label assigner. Compare with normal model (a), the schema in (b) has auxiliary head.\nDifferent from the usual independent label assigner (c), we propose (d) lead head guided label assigner and (e) coarse-to-\ufb01ne lead head\nguided label assigner. The proposed label assigner is optimized by lead head prediction and the ground truth to get the labels of training\nlead head and auxiliary head at the same time. The detailed coarse-to-\ufb01ne implementation method and constraint design details will be\nelaborated in Apendix.\n4.2. Coarse for auxiliary and \ufb01ne for lead loss\nDeep supervision [38] is a technique that is often used\nin training deep networks. Its main concept is to add\nextra auxiliary head in the middle layers of the network,\nand the shallow network weights with assistant loss as the\nguide. Even for architectures such as ResNet [26] and\nDenseNet [32] which usually converge well, deep supervi-\nsion [70, 98, 67, 47, 82, 65, 86, 50] can still signi\ufb01cantly\nimprove the performance of the model on many tasks. Fig-\nure 5 (a) and (b) show, respectively, the object detector ar-\nchitecture \u201cwithout\u201d and \u201cwith\u201d deep supervision. In this\npaper, we call the head responsible for the \ufb01nal output as\nthe lead head, and the head used to assist training is called\nauxiliary head.\nNext we want to discuss the issue of label assignment. In\nthe past, in the training of deep network, label assignment\nusually refers directly to the ground truth and generate hard\nlabel according to the given rules. However, in recent years,\nif we take object detection as an example, researchers often\nuse the quality and distribution of prediction output by the\nnetwork, and then consider together with the ground truth to\nuse some calculation and optimization methods to generate\na reliable soft label [61, 8, 36, 99, 91, 44, 43, 90, 20, 17, 42].\nFor example, YOLO [61] use IoU of prediction of bounding\nbox regression and ground truth as the soft label of object-\nness. In this paper, we call the mechanism that considers\nthe network prediction results together with the ground truth\nand then assigns soft labels as \u201clabel assigner.\u201d\nDeep supervision needs to be trained on the target ob-\njectives regardless of the circumstances of auxiliary head or\nlead head. During the development of soft label assigner re-\nlated techniques, we accidentally discovered a new deriva-\ntive issue, i.e., \u201cHow to assign soft label to auxiliary head\nand lead head ?\u201d To the best of our knowledge, the relevant\nliterature has not explored this issue so far. The results of\nthe most popular method at present is as shown in Figure 5\n(c), which is to separate auxiliary head and lead head, and\nthen use their own prediction results and the ground truthto execute label assignment. The method proposed in this\npaper is a new label assignment method that guides both\nauxiliary head and lead head by the lead head prediction.\nIn other words, we use lead head prediction as guidance to\ngenerate coarse-to-\ufb01ne hierarchical labels, which are used\nfor auxiliary head and lead head learning, respectively. The\ntwo proposed deep supervision label assignment strategies\nare shown in Figure 5 (d) and (e), respectively.\nLead head guided label assigner is mainly calculated\nbased on the prediction result of the lead head and the\nground truth, and generate soft label through the optimiza-\ntion process. This set of soft labels will be used as the tar-\nget training model for both auxiliary head and lead head.\nThe reason to do this is because lead head has a relatively\nstrong learning capability, so the soft label generated from it\nshould be more representative of the distribution and corre-\nlation between the source data and the target. Furthermore,\nwe can view such learning as a kind of generalized residual\nlearning. By letting the shallower auxiliary head directly\nlearn the information that lead head has learned, lead head\nwill be more able to focus on learning residual information\nthat has not yet been learned.\nCoarse-to-\ufb01ne lead head guided label assigner also\nused the predicted result of the lead head and the ground\ntruth to generate soft label.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ea894ef-f21f-4dcc-a5e9-38fca91e0cd1": {"__data__": {"id_": "8ea894ef-f21f-4dcc-a5e9-38fca91e0cd1", "embedding": null, "metadata": {"page_label": "5", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd8c41dd-4f30-45aa-9f24-4c42187bd089", "node_type": "4", "metadata": {"page_label": "5", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "de4b8733aaf8715c6f927170e914cf6ecbf41bcaa7361395319515dca7599ae5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56a59ba4-2755-4bea-9893-2ef2ec474538", "node_type": "1", "metadata": {"page_label": "5", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "5b07e43274d4cebbb3a2ce5bd47b42b3aaa5a52a4ee17e305d27661168ff7bae", "class_name": "RelatedNodeInfo"}}, "text": "Lead head guided label assigner is mainly calculated\nbased on the prediction result of the lead head and the\nground truth, and generate soft label through the optimiza-\ntion process. This set of soft labels will be used as the tar-\nget training model for both auxiliary head and lead head.\nThe reason to do this is because lead head has a relatively\nstrong learning capability, so the soft label generated from it\nshould be more representative of the distribution and corre-\nlation between the source data and the target. Furthermore,\nwe can view such learning as a kind of generalized residual\nlearning. By letting the shallower auxiliary head directly\nlearn the information that lead head has learned, lead head\nwill be more able to focus on learning residual information\nthat has not yet been learned.\nCoarse-to-\ufb01ne lead head guided label assigner also\nused the predicted result of the lead head and the ground\ntruth to generate soft label. However, in the process we gen-\nerate two different sets of soft label, i.e., coarse label and\n\ufb01ne label, where \ufb01ne label is the same as the soft label gen-\nerated by lead head guided label assigner, and coarse label\nis generated by allowing more grids to be treated as posi-\ntive target by relaxing the constraints of the positive sample\nassignment process. The reason for this is that the learning\nability of an auxiliary head is not as strong as that of a lead\nhead, and in order to avoid losing the information that needs\nto be learned, we will focus on optimizing the recall of aux-\niliary head in the object detection task. As for the output\nof lead head, we can \ufb01lter the high precision results from\nthe high recall results as the \ufb01nal output. However, we must\nnote that if the additional weight of coarse label is close to\n5", "mimetype": "text/plain", "start_char_idx": 3224, "end_char_idx": 5000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7961e64f-ad05-4abb-af1b-7322db79904b": {"__data__": {"id_": "7961e64f-ad05-4abb-af1b-7322db79904b", "embedding": null, "metadata": {"page_label": "6", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dfe24c78-87b5-49e3-b983-b08e80c0d34b", "node_type": "4", "metadata": {"page_label": "6", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "4293c64514569ad258b103618bea6ddec5f62c032489cef86bafc7d6046358cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de69e404-59ea-4d48-a457-ed50dfacad02", "node_type": "1", "metadata": {}, "hash": "504aad70f50de75a80446cf8f26c023a3cd93917ac493da538b98995cd94888a", "class_name": "RelatedNodeInfo"}}, "text": "Table 1: Comparison of baseline object detectors.\nModel #Param. FLOPs Size APvalAPval\n50APval\n75APval\nSAPval\nMAPval\nL\nYOLOv4 [3] 64.4M 142.8G 640 49.7% 68.2% 54.3% 32.9% 54.8% 63.7%\nYOLOR-u5 (r6.1) [81] 46.5M 109.1G 640 50.2% 68.7% 54.6% 33.2% 55.5% 63.7%\nYOLOv4-CSP [79] 52.9M 120.4G 640 50.3% 68.6% 54.9% 34.2% 55.6% 65.1%\nYOLOR-CSP [81] 52.9M 120.4G 640 50.8% 69.5% 55.3% 33.7% 56.0% 65.4%\nYOLOv7 36.9M 104.7G 640 51.2% 69.7% 55.5% 35.2% 56.0% 66.7%\nimprovement -43% -15% - +0.4 +0.2 +0.2 +1.5 = +1.3\nYOLOR-CSP-X [81] 96.9M 226.8G 640 52.7% 71.3% 57.4% 36.3% 57.5% 68.3%\nYOLOv7-X 71.3M 189.9G 640 52.9% 71.1% 57.5% 36.9% 57.7% 68.6%\nimprovement -36% -19% - +0.2 -0.2 +0.1 +0.6 +0.2 +0.3\nYOLOv4-tiny [79] 6.1 6.9 416 24.9% 42.1% 25.7% 8.7% 28.4% 39.2%\nYOLOv7-tiny 6.2 5.8 416 35.2% 52.8% 37.3% 15.7% 38.0% 53.4%\nimprovement +2% -19% - +10.3 +10.7 +11.6 +7.0 +9.6 +14.2\nYOLOv4-tiny-3l [79] 8.7 5.2 320 30.8% 47.3% 32.2% 10.9% 31.9% 51.5%\nYOLOv7-tiny 6.2 3.5 320 30.8% 47.3% 32.2% 10.0% 31.9% 52.2%\nimprovement -39% -49% - = = = -0.9 = +0.7\nYOLOR-E6 [81] 115.8M 683.2G 1280 55.7% 73.2% 60.7% 40.1% 60.4% 69.2%\nYOLOv7-E6 97.2M 515.2G 1280 55.9% 73.5% 61.1% 40.6% 60.3% 70.0%\nimprovement -19% -33% - +0.2 +0.3 +0.4 +0.5 -0.1 +0.8\nYOLOR-D6 [81] 151.7M 935.6G 1280 56.1% 73.9% 61.2% 42.4% 60.5% 69.9%\nYOLOv7-D6 154.7M 806.8G 1280 56.3% 73.8% 61.4% 41.3% 60.6% 70.1%\nYOLOv7-E6E 151.7M 843.2G 1280 56.8% 74.4% 62.1% 40.8% 62.1% 70.6%\nimprovement = -11% - +0.7 +0.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1457, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de69e404-59ea-4d48-a457-ed50dfacad02": {"__data__": {"id_": "de69e404-59ea-4d48-a457-ed50dfacad02", "embedding": null, "metadata": {"page_label": "6", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dfe24c78-87b5-49e3-b983-b08e80c0d34b", "node_type": "4", "metadata": {"page_label": "6", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "4293c64514569ad258b103618bea6ddec5f62c032489cef86bafc7d6046358cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7961e64f-ad05-4abb-af1b-7322db79904b", "node_type": "1", "metadata": {"page_label": "6", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "fa59a5a4ded3ff002c759ea798374fe753f0a22255a6b8257c2eb1d50b72409a", "class_name": "RelatedNodeInfo"}}, "text": "2 +0.3 +0.4 +0.5 -0.1 +0.8\nYOLOR-D6 [81] 151.7M 935.6G 1280 56.1% 73.9% 61.2% 42.4% 60.5% 69.9%\nYOLOv7-D6 154.7M 806.8G 1280 56.3% 73.8% 61.4% 41.3% 60.6% 70.1%\nYOLOv7-E6E 151.7M 843.2G 1280 56.8% 74.4% 62.1% 40.8% 62.1% 70.6%\nimprovement = -11% - +0.7 +0.5 +0.9 -1.6 +1.6 +0.7\nthat of \ufb01ne label, it may produce bad prior at \ufb01nal predic-\ntion. Therefore, in order to make those extra coarse positive\ngrids have less impact, we put restrictions in the decoder,\nso that the extra coarse positive grids cannot produce soft\nlabel perfectly. The mechanism mentioned above allows\nthe importance of \ufb01ne label and coarse label to be dynam-\nically adjusted during the learning process, and makes the\noptimizable upper bound of \ufb01ne label always higher than\ncoarse label.\n4.3. Other trainable bag-of-freebies\nIn this section we will list some trainable bag-of-\nfreebies. These freebies are some of the tricks we used\nin training, but the original concepts were not proposed\nby us. The training details of these freebies will be elab-\norated in the Appendix, including (1) Batch normalization\nin conv-bn-activation topology: This part mainly connects\nbatch normalization layer directly to convolutional layer.\nThe purpose of this is to integrate the mean and variance\nof batch normalization into the bias and weight of convolu-\ntional layer at the inference stage. (2) Implicit knowledge\nin YOLOR [81] combined with convolution feature map in\naddition and multiplication manner: Implicit knowledge in\nYOLOR can be simpli\ufb01ed to a vector by pre-computing at\nthe inference stage. This vector can be combined with the\nbias and weight of the previous or subsequent convolutional\nlayer. (3) EMA model: EMA is a technique used in mean\nteacher [75], and in our system we use EMA model purely\nas the \ufb01nal inference model.5. Experiments\n5.1. Experimental setup\nWe use Microsoft COCO dataset to conduct experiments\nand validate our object detection method. All our experi-\nments did not use pre-trained models. That is, all models\nwere trained from scratch. During the development pro-\ncess, we used train 2017 set for training, and then used val\n2017 set for veri\ufb01cation and choosing hyperparameters. Fi-\nnally, we show the performance of object detection on the\ntest 2017 set and compare it with the state-of-the-art object\ndetection algorithms. Detailed training parameter settings\nare described in Appendix.\nWe designed basic model for edge GPU, normal GPU,\nand cloud GPU, and they are respectively called YOLOv7-\ntiny, YOLOv7, and YOLOv7-W6. At the same time, we\nalso use basic model for model scaling for different ser-\nvice requirements and get different types of models. For\nYOLOv7, we do stack scaling on neck, and use the pro-\nposed compound scaling method to perform scaling-up of\nthe depth and width of the entire model, and use this to ob-\ntain YOLOv7-X. As for YOLOv7-W6, we use the newly\nproposed compound scaling method to obtain YOLOv7-E6\nand YOLOv7-D6. In addition, we use the proposed E-\nELAN for YOLOv7-E6, and thereby complete YOLOv7-\nE6E. Since YOLOv7-tiny is an edge GPU-oriented archi-\ntecture, it will use leaky ReLU as activation function. As\nfor other models we use SiLU as activation function. We\nwill describe the scaling factor of each model in detail in\nAppendix.\n6", "mimetype": "text/plain", "start_char_idx": 1201, "end_char_idx": 4474, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d61efd0-b799-4c2d-a36e-98f9feea743e": {"__data__": {"id_": "7d61efd0-b799-4c2d-a36e-98f9feea743e", "embedding": null, "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a322d5e2-d268-4f39-b943-1bd36c92d831", "node_type": "4", "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "568bc7acb60bdcde745741c65772a32baf8191045231efae603d8baefb9c7505", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1eddd56-2e7d-4b3b-aea3-37748cb2ac9a", "node_type": "1", "metadata": {}, "hash": "ec81ce23e8c66b25b0590b3e44b92789f38aa075bdbf0d45eb205436ee4daf4e", "class_name": "RelatedNodeInfo"}}, "text": "Table 2: Comparison of state-of-the-art real-time object detectors.\nModel #Param. FLOPs Size FPS APtest/APvalAPtest\n50APtest\n75APtest\nSAPtest\nMAPtest\nL\nYOLOX-S [21] 9.0M 26.8G 640 102 40.5% / 40.5% - - - - -\nYOLOX-M [21] 25.3M 73.8G 640 81 47.2% / 46.9% - - - - -\nYOLOX-L [21] 54.2M 155.6G 640 69 50.1% / 49.7% - - - - -\nYOLOX-X [21] 99.1M 281.9G 640 58 51.5% / 51.1% - - - - -\nPPYOLOE-S [85] 7.9M 17.4G 640 208 43.1% / 42.7% 60.5% 46.6% 23.2% 46.4% 56.9%\nPPYOLOE-M [85] 23.4M 49.9G 640 123 48.9% / 48.6% 66.5% 53.0% 28.6% 52.9% 63.8%\nPPYOLOE-L [85] 52.2M 110.1G 640 78 51.4% / 50.9% 68.9% 55.6% 31.4% 55.3% 66.1%\nPPYOLOE-X [85] 98.4M 206.6G 640 45 52.2% / 51.9% 69.9% 56.5% 33.3% 56.3% 66.4%\nYOLOv5-N (r6.1) [23] 1.9M 4.5G 640 159 - / 28.0% - - - - -\nYOLOv5-S (r6.1) [23] 7.2M 16.5G 640 156 - / 37.4% - - - - -\nYOLOv5-M (r6.1) [23] 21.2M 49.0G 640 122 - / 45.4% - - - - -\nYOLOv5-L (r6.1) [23] 46.5M 109.1G 640 99 - / 49.0% - - - - -\nYOLOv5-X (r6.1) [23] 86.7M 205.7G 640 83 - / 50.7% - - - - -\nYOLOR-CSP [81] 52.9M 120.4G 640 106 51.1% / 50.8% 69.6% 55.7% 31.7% 55.3% 64.7%\nYOLOR-CSP-X [81] 96.9M 226.8G 640 87 53.0% / 52.7% 71.4% 57.9% 33.7% 57.1% 66.8%\nYOLOv7-tiny-SiLU 6.2M 13.8G 640 286 38.7% / 38.7% 56.7% 41.7% 18.8% 42.4% 51.9%\nYOLOv7 36.9M 104.7G 640 161 51.4% / 51.2% 69.7% 55.9% 31.8% 55.5% 65.0%\nYOLOv7-X 71.3M 189.9G 640 114 53.1% / 52.9% 71.2% 57.8% 33.8% 57.1% 67.4%\nYOLOv5-N6 (r6.1) [23] 3.2M 18.4G 1280 123 - / 36.0% - - - - -\nYOLOv5-S6 (r6.1) [23] 12.6M 67.2G 1280 122 - / 44.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1eddd56-2e7d-4b3b-aea3-37748cb2ac9a": {"__data__": {"id_": "e1eddd56-2e7d-4b3b-aea3-37748cb2ac9a", "embedding": null, "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a322d5e2-d268-4f39-b943-1bd36c92d831", "node_type": "4", "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "568bc7acb60bdcde745741c65772a32baf8191045231efae603d8baefb9c7505", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d61efd0-b799-4c2d-a36e-98f9feea743e", "node_type": "1", "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "a34c6e97a30d6945de7eb0caa102e0302785695dcfbdeedea62a16440c26c6cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec6bd262-2a85-4505-8292-f247259a4da9", "node_type": "1", "metadata": {}, "hash": "9de7b236a8a1055b677616e63120bbb6b1d896d30a4bc60b1878faf81db47437", "class_name": "RelatedNodeInfo"}}, "text": "8% 42.4% 51.9%\nYOLOv7 36.9M 104.7G 640 161 51.4% / 51.2% 69.7% 55.9% 31.8% 55.5% 65.0%\nYOLOv7-X 71.3M 189.9G 640 114 53.1% / 52.9% 71.2% 57.8% 33.8% 57.1% 67.4%\nYOLOv5-N6 (r6.1) [23] 3.2M 18.4G 1280 123 - / 36.0% - - - - -\nYOLOv5-S6 (r6.1) [23] 12.6M 67.2G 1280 122 - / 44.8% - - - - -\nYOLOv5-M6 (r6.1) [23] 35.7M 200.0G 1280 90 - / 51.3% - - - - -\nYOLOv5-L6 (r6.1) [23] 76.8M 445.6G 1280 63 - / 53.7% - - - - -\nYOLOv5-X6 (r6.1) [23] 140.7M 839.2G 1280 38 - / 55.0% - - - - -\nYOLOR-P6 [81] 37.2M 325.6G 1280 76 53.9% / 53.5% 71.4% 58.9% 36.1% 57.7% 65.6%\nYOLOR-W6 [81] 79.8G 453.2G 1280 66 55.2% / 54.8% 72.7% 60.5% 37.7% 59.1% 67.1%\nYOLOR-E6 [81] 115.8M 683.2G 1280 45 55.8% / 55.7% 73.4% 61.1% 38.4% 59.7% 67.7%\nYOLOR-D6 [81] 151.7M 935.6G 1280 34 56.5% / 56.1% 74.1% 61.9% 38.9% 60.4% 68.7%\nYOLOv7-W6 70.4M 360.0G 1280 84 54.9% / 54.6% 72.6% 60.1% 37.3% 58.7% 67.1%\nYOLOv7-E6 97.2M 515.2G 1280 56 56.0% / 55.9% 73.5% 61.2% 38.0% 59.9% 68.4%\nYOLOv7-D6 154.7M 806.8G 1280 44 56.6% / 56.3% 74.0% 61.8% 38.8% 60.1% 69.5%\nYOLOv7-E6E 151.7M 843.2G 1280 36 56.8% / 56.8% 74.4% 62.1% 39.3% 60.5% 69.0%\n1Our FLOPs is calaculated by rectangle input resolution like 640 \u0002640 or 1280 \u00021280.\n2Our inference time is estimated by using letterbox resize input image to make its long side equals to 640 or 1280.\n5.2. Baselines\nWe choose previous version of YOLO [3, 79] and state-\nof-the-art object detector YOLOR [81] as our baselines. Ta-\nble 1 shows the comparison of our proposed YOLOv7 mod-\nels and those baseline that are trained with the same settings.\nFrom the results we see that if compared with YOLOv4,\nYOLOv7 has 75% less parameters, 36% less computation,\nand brings 1.5% higher AP. If compared with state-of-the-\nart YOLOR-CSP, YOLOv7 has 43% fewer parameters, 15%\nless computation, and 0.4% higher AP.", "mimetype": "text/plain", "start_char_idx": 1221, "end_char_idx": 3022, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec6bd262-2a85-4505-8292-f247259a4da9": {"__data__": {"id_": "ec6bd262-2a85-4505-8292-f247259a4da9", "embedding": null, "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a322d5e2-d268-4f39-b943-1bd36c92d831", "node_type": "4", "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "568bc7acb60bdcde745741c65772a32baf8191045231efae603d8baefb9c7505", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1eddd56-2e7d-4b3b-aea3-37748cb2ac9a", "node_type": "1", "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "0db8a7a2f0598d89cecfbc8cb05f49fb493d3b9e8be897e5767826cc85f286b8", "class_name": "RelatedNodeInfo"}}, "text": "2Our inference time is estimated by using letterbox resize input image to make its long side equals to 640 or 1280.\n5.2. Baselines\nWe choose previous version of YOLO [3, 79] and state-\nof-the-art object detector YOLOR [81] as our baselines. Ta-\nble 1 shows the comparison of our proposed YOLOv7 mod-\nels and those baseline that are trained with the same settings.\nFrom the results we see that if compared with YOLOv4,\nYOLOv7 has 75% less parameters, 36% less computation,\nand brings 1.5% higher AP. If compared with state-of-the-\nart YOLOR-CSP, YOLOv7 has 43% fewer parameters, 15%\nless computation, and 0.4% higher AP. In the performance\nof tiny model, compared with YOLOv4-tiny-31, YOLOv7-\ntiny reduces the number of parameters by 39% and the\namount of computation by 49%, but maintains the same AP.\nOn the cloud GPU model, our model can still have a higher\nAP while reducing the number of parameters by 19% and\nthe amount of computation by 33%.5.3. Comparison with state-of-the-arts\nWe compare the proposed method with state-of-the-art\nobject detectors for general GPUs and Mobile GPUs, and\nthe results are shown in Table 2. From the results in\nTable 2 we know that the proposed method has the best\nspeed-accuracy trade-off comprehensively. If we compare\nYOLOv7-tiny-SiLU with YOLOv5-N (r6.1), our method\nis 127 fps faster and 10.7% more accurate on AP. In ad-\ndition, YOLOv7 has 51.4% AP at frame rate of 161 fps,\nwhile PPYOLOE-L with the same AP has only 78 fps frame\nrate. In terms of parameter usage, YOLOv7 is 41% less than\nPPYOLOE-L. If we compare YOLOv7-X with 114 fps in-\nference speed to YOLOv5-L (r6.1) with 99 fps inference\nspeed, YOLOv7-X can improve AP by 3.9%. If YOLOv7-\nX is compared with YOLOv5-X (r6.1) of similar scale, the\ninference speed of YOLOv7-X is 31 fps faster. In addi-\ntion, in terms of the amount of parameters and computation,\nYOLOv7-X reduces 22% of parameters and 8% of compu-\ntation compared to YOLOv5-X (r6.1), but improves AP by\n2.2%.\n7", "mimetype": "text/plain", "start_char_idx": 2403, "end_char_idx": 4378, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab4ebb60-822a-44bd-a46a-df85f265f1b7": {"__data__": {"id_": "ab4ebb60-822a-44bd-a46a-df85f265f1b7", "embedding": null, "metadata": {"page_label": "8", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28442dad-f08b-4696-bc2f-232f6e8e0d90", "node_type": "4", "metadata": {"page_label": "8", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "10adf774ce7ab6ec1120edd6e3209196bbc64c7e08c66e386ed47de4f1b5dd44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0247b09b-ce30-4531-9586-5524455f0d50", "node_type": "1", "metadata": {}, "hash": "62b4c1197ba23f17b51586310f6cf950b64743e4e45e6cd10f76dc663046a30b", "class_name": "RelatedNodeInfo"}}, "text": "If we compare YOLOv7 with YOLOR using the input\nresolution 1280, the inference speed of YOLOv7-W6 is 8\nfps faster than that of YOLOR-P6, and the detection rate is\nalso increased by 1% AP. As for the comparison between\nYOLOv7-E6 and YOLOv5-X6 (r6.1), the former has 0.9%\nAP gain than the latter, 45% less parameters and 63% less\ncomputation, and the inference speed is increased by 47%.\nYOLOv7-D6 has close inference speed to YOLOR-E6, but\nimproves AP by 0.8%. YOLOv7-E6E has close inference\nspeed to YOLOR-D6, but improves AP by 0.3%.\n5.4. Ablation study\n5.4.1 Proposed compound scaling method\nTable 3 shows the results obtained when using different\nmodel scaling strategies for scaling up. Among them, our\nproposed compound scaling method is to scale up the depth\nof computational block by 1.5 times and the width of tran-\nsition block by 1.25 times. If our method is compared with\nthe method that only scaled up the width, our method can\nimprove the AP by 0.5% with less parameters and amount\nof computation. If our method is compared with the method\nthat only scales up the depth, our method only needs to in-\ncrease the number of parameters by 2.9% and the amount of\ncomputation by 1.2%, which can improve the AP by 0.2%.\nIt can be seen from the results of Table 3 that our proposed\ncompound scaling strategy can utilize parameters and com-\nputation more ef\ufb01ciently.\nTable 3: Ablation study on proposed model scaling.\nModel #Param. FLOPs Size APvalAPval\n50APval\n75\nbase (v7-X light) 47.0M 125.5G 640 51.7% 70.1% 56.0%\nwidth only (1.25 w)73.4M 195.5G 640 52.4% 70.9% 57.1%\ndepth only (2.0 d) 69.3M 187.6G 640 52.7% 70.8% 57.3%\ncompound (v7-X) 71.3M 189.9G 640 52.9% 71.1% 57.5%\nimprovement - - - +1.2 +1.0 +1.5\n5.4.2 Proposed planned re-parameterized model\nIn order to verify the generality of our proposed planed\nre-parameterized model, we use it on concatenation-based\nmodel and residual-based model respectively for veri\ufb01ca-\ntion. The concatenation-based model and residual-based\nmodel we chose for veri\ufb01cation are 3-stacked ELAN and\nCSPDarknet, respectively.\nIn the experiment of concatenation-based model, we re-\nplace the 3\u00023convolutional layers in different positions in\n3-stacked ELAN with RepConv, and the detailed con\ufb01gura-\ntion is shown in Figure 6. From the results shown in Table 4\nwe see that all higher AP values are present on our proposed\nplanned re-parameterized model.\nIn the experiment dealing with residual-based model,\nsince the original dark block does not have a 3\u00023con-\nFigure 6: Planned RepConv 3-stacked ELAN. Blue circles are the\nposition we replace Conv by RepConv.\nTable 4: Ablation study on planned RepConcatenation model.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2656, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0247b09b-ce30-4531-9586-5524455f0d50": {"__data__": {"id_": "0247b09b-ce30-4531-9586-5524455f0d50", "embedding": null, "metadata": {"page_label": "8", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28442dad-f08b-4696-bc2f-232f6e8e0d90", "node_type": "4", "metadata": {"page_label": "8", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "10adf774ce7ab6ec1120edd6e3209196bbc64c7e08c66e386ed47de4f1b5dd44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab4ebb60-822a-44bd-a46a-df85f265f1b7", "node_type": "1", "metadata": {"page_label": "8", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "f6b94b6f39323a234c2ec9a6595e7bf06c04f3f31bf35f1e4ca8e2dd98a17a71", "class_name": "RelatedNodeInfo"}}, "text": "The concatenation-based model and residual-based\nmodel we chose for veri\ufb01cation are 3-stacked ELAN and\nCSPDarknet, respectively.\nIn the experiment of concatenation-based model, we re-\nplace the 3\u00023convolutional layers in different positions in\n3-stacked ELAN with RepConv, and the detailed con\ufb01gura-\ntion is shown in Figure 6. From the results shown in Table 4\nwe see that all higher AP values are present on our proposed\nplanned re-parameterized model.\nIn the experiment dealing with residual-based model,\nsince the original dark block does not have a 3\u00023con-\nFigure 6: Planned RepConv 3-stacked ELAN. Blue circles are the\nposition we replace Conv by RepConv.\nTable 4: Ablation study on planned RepConcatenation model.\nModel APvalAPval\n50APval\n75APval\nSAPval\nMAPval\nL\nbase (3-S ELAN) 52.26% 70.41% 56.77% 35.81% 57.00% 67.59%\nFigure 6 (a) 52.18% 70.34% 56.90% 35.71% 56.83% 67.51%\nFigure 6 (b) 52.30% 70.30% 56.92% 35.76% 56.95% 67.74%\nFigure 6 (c) 52.33% 70.56% 56.91% 35.90% 57.06% 67.50%\nFigure 6 (d) 52.17% 70.32% 56.82% 35.33% 57.06% 68.09%\nFigure 6 (e) 52.23% 70.20% 56.81% 35.34% 56.97% 66.88%\nvolution block that conforms to our design strategy, we ad-\nditionally design a reversed dark block for the experiment,\nwhose architecture is shown in Figure 7. Since the CSP-\nDarknet with dark block and reversed dark block has exactly\nthe same amount of parameters and operations, it is fair to\ncompare. The experiment results illustrated in Table 5 fully\ncon\ufb01rm that the proposed planned re-parameterized model\nis equally effective on residual-based model. We \ufb01nd that\nthe design of RepCSPResNet [85] also \ufb01t our design pat-\ntern.\nFigure 7: Reversed CSPDarknet. We reverse the position of 1\u00021\nand3\u00023convolutional layer in dark block to \ufb01t our planned re-\nparameterized model design strategy.\nTable 5: Ablation study on planned RepResidual model.\nModel APvalAPval\n50APval\n75APval\nSAPval\nMAPval\nL\nbase (YOLOR-W6) 54.82% 72.39% 59.95% 39.68% 59.38% 68.30%\nRepCSP 54.67% 72.50% 59.58% 40.22% 59.61% 67.87%\nRCSP 54.36% 71.95% 59.54% 40.15% 59.02% 67.44%\nRepRCSP 54.85% 72.51% 60.08% 40.53% 59.52% 68.06%\nbase (YOLOR-CSP) 50.81% 69.47% 55.28% 33.74% 56.01% 65.38%\nRepRCSP 50.91% 69.54% 55.55% 34.44% 55.74% 65.46%\n8", "mimetype": "text/plain", "start_char_idx": 1937, "end_char_idx": 4150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29cfe172-438d-45f6-af66-903ab5e0788b": {"__data__": {"id_": "29cfe172-438d-45f6-af66-903ab5e0788b", "embedding": null, "metadata": {"page_label": "9", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03e2cd3e-53dc-430d-abef-8f3e3d41d4f1", "node_type": "4", "metadata": {"page_label": "9", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "f0c98aaf62097d82b7eeede2000bb410bb4d8225ec065aadeb20513069570625", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf81f518-9ec6-4d16-b031-943277798f29", "node_type": "1", "metadata": {}, "hash": "f093036d0e545a3240a34da1b8fda7dbfa82a9e2a99eaa2701b37ec9b325dcfa", "class_name": "RelatedNodeInfo"}}, "text": "Figure 8: Objectness map predicted by different methods at auxiliary head and lead head.\n5.4.3 Proposed assistant loss for auxiliary head\nIn the assistant loss for auxiliary head experiments, we com-\npare the general independent label assignment for lead head\nand auxiliary head methods, and we also compare the two\nproposed lead guided label assignment methods. We show\nall comparison results in Table 6. From the results listed in\nTable 6, it is clear that any model that increases assistant\nloss can signi\ufb01cantly improve the overall performance. In\naddition, our proposed lead guided label assignment strat-\negy receives better performance than the general indepen-\ndent label assignment strategy in AP, AP 50, and AP 75. As\nfor our proposed coarse for assistant and \ufb01ne for lead label\nassignment strategy, it results in best results in all cases. In\nFigure 8 we show the objectness map predicted by different\nmethods at auxiliary head and lead head. From Figure 8 we\n\ufb01nd that if auxiliary head learns lead guided soft label, it\nwill indeed help lead head to extract the residual informa-\ntion from the consistant targets.\nTable 6: Ablation study on proposed auxiliary head.\nModel Size APvalAPval\n50APval\n75\nbase (v7-E6) 1280 55.6% 73.2% 60.7%\nindependent 1280 55.8% 73.4% 60.9%\nlead guided 1280 55.9% 73.5% 61.0%\ncoarse-to-\ufb01ne lead guided 1280 55.9% 73.5% 61.1%\nimprovement - +0.3 +0.3 +0.4\nIn Table 7 we further analyze the effect of the proposed\ncoarse-to-\ufb01ne lead guided label assignment method on the\ndecoder of auxiliary head. That is, we compared the results\nof with/without the introduction of upper bound constraint.\nJudging from the numbers in the Table, the method of con-\nstraining the upper bound of objectness by the distance from\nthe center of the object can achieve better performance.\nTable 7: Ablation study on constrained auxiliary head.\nModel Size APvalAPval\n50APval\n75\nbase (v7-E6) 1280 55.6% 73.2% 60.7%\naux without constraint 1280 55.9% 73.5% 61.0%\naux with constraint 1280 55.9% 73.5% 61.1%\nimprovement - +0.3 +0.3 +0.4Since the proposed YOLOv7 uses multiple pyramids to\njointly predict object detection results, we can directly con-\nnect auxiliary head to the pyramid in the middle layer for\ntraining. This type of training can make up for informa-\ntion that may be lost in the next level pyramid prediction.\nFor the above reasons, we designed partial auxiliary head\nin the proposed E-ELAN architecture. Our approach is to\nconnect auxiliary head after one of the sets of feature map\nbefore merging cardinality, and this connection can make\nthe weight of the newly generated set of feature map not\ndirectly updated by assistant loss. Our design allows each\npyramid of lead head to still get information from objects\nwith different sizes. Table 8 shows the results obtained us-\ning two different methods, i.e., coarse-to-\ufb01ne lead guided\nand partial coarse-to-\ufb01ne lead guided methods. Obviously,\nthe partial coarse-to-\ufb01ne lead guided method has a better\nauxiliary effect.\nTable 8: Ablation study on partial auxiliary head.\nModel Size APvalAPval\n50APval\n75\nbase (v7-E6E) 1280 56.3% 74.0% 61.5%\naux 1280 56.5% 74.0% 61.6%\npartial aux 1280 56.8% 74.4% 62.1%\nimprovement - +0.5 +0.4 +0.6\n6. Conclusions\nIn this paper we propose a new architecture of real-\ntime object detector and the corresponding model scaling\nmethod. Furthermore, we \ufb01nd that the evolving process\nof object detection methods generates new research top-\nics. During the research process, we found the replace-\nment problem of re-parameterized module and the alloca-\ntion problem of dynamic label assignment.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf81f518-9ec6-4d16-b031-943277798f29": {"__data__": {"id_": "bf81f518-9ec6-4d16-b031-943277798f29", "embedding": null, "metadata": {"page_label": "9", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03e2cd3e-53dc-430d-abef-8f3e3d41d4f1", "node_type": "4", "metadata": {"page_label": "9", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "f0c98aaf62097d82b7eeede2000bb410bb4d8225ec065aadeb20513069570625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29cfe172-438d-45f6-af66-903ab5e0788b", "node_type": "1", "metadata": {"page_label": "9", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "f81ca9a567835167a32a9fe2d036e2a1c3f5b3ca0f11be8ffedc12e44859411d", "class_name": "RelatedNodeInfo"}}, "text": "Table 8: Ablation study on partial auxiliary head.\nModel Size APvalAPval\n50APval\n75\nbase (v7-E6E) 1280 56.3% 74.0% 61.5%\naux 1280 56.5% 74.0% 61.6%\npartial aux 1280 56.8% 74.4% 62.1%\nimprovement - +0.5 +0.4 +0.6\n6. Conclusions\nIn this paper we propose a new architecture of real-\ntime object detector and the corresponding model scaling\nmethod. Furthermore, we \ufb01nd that the evolving process\nof object detection methods generates new research top-\nics. During the research process, we found the replace-\nment problem of re-parameterized module and the alloca-\ntion problem of dynamic label assignment. To solve the\nproblem, we propose the trainable bag-of-freebies method\nto enhance the accuracy of object detection. Based on the\nabove, we have developed the YOLOv7 series of object de-\ntection systems, which receives the state-of-the-art results.\n7. Acknowledgements\nThe authors wish to thank National Center for High-\nperformance Computing (NCHC) for providing computa-\ntional and storage resources.\n9", "mimetype": "text/plain", "start_char_idx": 2997, "end_char_idx": 4000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5636922c-3ddb-4892-9376-768782b8777c": {"__data__": {"id_": "5636922c-3ddb-4892-9376-768782b8777c", "embedding": null, "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75f70afd-2c93-41bc-91b4-9cca3f0d744c", "node_type": "4", "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "d47fd5f70dc1d03e6505cbf8876710e0aff9e744d4f503350d6cd7152b48e071", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d362fc9-1e95-4688-b73e-c27d22cf25aa", "node_type": "1", "metadata": {}, "hash": "b97c4577a5556cb03cd25cd7a38f44b9594e87c44a526676a3665d5ca9631928", "class_name": "RelatedNodeInfo"}}, "text": "Table 9: More comparison (batch=1, no-TRT, without extra object detection training data)\nModel #Param. FLOPs Size FPSV100APtest/APvalAPtest\n50APtest\n75\nYOLOv7-tiny-SiLU 6.2M 13.8G 640 286 38.7% /38.7% 56.7% 41.7%\nPPYOLOE-S [85] 7.9M 17.4G 640 208 43.1% /42.7% 60.5% 46.6%\nYOLOv7 36.9M 104.7G 640 161 51.4% /51.2% 69.7% 55.9%\nYOLOv5-N (r6.1) [23] 1.9M 4.5G 640 159 - / 28.0% - -\nYOLOv5-S (r6.1) [23] 7.2M 16.5G 640 156 - / 37.4% - -\nPPYOLOE-M [85] 23.4M 49.9G 640 123 48.9% / 48.6% 66.5% 53.0%\nYOLOv5-N6 (r6.1) [23] 3.2M 18.4G 1280 123 - / 36.0% - -\nYOLOv5-S6 (r6.1) [23] 12.6M 67.2G 1280 122 - / 44.8% - -\nYOLOv5-M (r6.1) [23] 21.2M 49.0G 640 122 - / 45.4% - -\nYOLOv7-X 71.3M 189.9G 640 114 53.1% /52.9% 71.2% 57.8%\nYOLOR-CSP [81] 52.9M 120.4G 640 106 51.1% / 50.8% 69.6% 55.7%\nYOLOX-S [21] 9.0M 26.8G 640 102 40.5% / 40.5% - -\nYOLOv5-L (r6.1) [23] 46.5M 109.1G 640 99 - / 49.0% - -\nYOLOv5-M6 (r6.1) [23] 35.7M 200.0G 1280 90 - / 51.3% - -\nYOLOR-CSP-X [81] 96.9M 226.8G 640 87 53.0% / 52.7% 71.4% 57.9%\nYOLOv7-W6 70.4M 360.0G 1280 84 54.9% /54.6% 72.6% 60.1%\nYOLOv5-X (r6.1) [23] 86.7M 205.7G 640 83 - / 50.7% - -\nYOLOX-M [21] 25.3M 73.8G 640 81 47.2% / 46.9% - -\nPPYOLOE-L [85] 52.2M 110.1G 640 78 51.4% / 50.9% 68.9% 55.6%\nYOLOR-P6 [81] 37.2M 325.6G 1280 76 53.9% / 53.5% 71.4% 58.9%\nYOLOX-L [21] 54.2M 155.6G 640 69 50.1% / 49.7% - -\nYOLOR-W6 [81] 79.8G 453.2G 1280 66 55.2% /54.8% 72.7% 60.5%\nYOLOv5-L6 (r6.1) [23] 76.8M 445.6G 1280 63 - / 53.7% - -\nYOLOX-X [21] 99.1M 281.9G 640 58 51.5% / 51.1% - -\nYOLOv7-E6 97.2M 515.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d362fc9-1e95-4688-b73e-c27d22cf25aa": {"__data__": {"id_": "9d362fc9-1e95-4688-b73e-c27d22cf25aa", "embedding": null, "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75f70afd-2c93-41bc-91b4-9cca3f0d744c", "node_type": "4", "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "d47fd5f70dc1d03e6505cbf8876710e0aff9e744d4f503350d6cd7152b48e071", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5636922c-3ddb-4892-9376-768782b8777c", "node_type": "1", "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "5f2cd57f4913691148d06bd78d618ee25435e7e0473ab4af7e9054f3774e11c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1aae2c9d-faaf-4d4b-b334-81ea497b1cb5", "node_type": "1", "metadata": {}, "hash": "172cf5abb1ea7f2a5017adf78efc973f5fe60dec1d06f57399881381b3f6212a", "class_name": "RelatedNodeInfo"}}, "text": "2M 325.6G 1280 76 53.9% / 53.5% 71.4% 58.9%\nYOLOX-L [21] 54.2M 155.6G 640 69 50.1% / 49.7% - -\nYOLOR-W6 [81] 79.8G 453.2G 1280 66 55.2% /54.8% 72.7% 60.5%\nYOLOv5-L6 (r6.1) [23] 76.8M 445.6G 1280 63 - / 53.7% - -\nYOLOX-X [21] 99.1M 281.9G 640 58 51.5% / 51.1% - -\nYOLOv7-E6 97.2M 515.2G 1280 56 56.0% /55.9% 73.5% 61.2%\nYOLOR-E6 [81] 115.8M 683.2G 1280 45 55.8% / 55.7% 73.4% 61.1%\nPPYOLOE-X [85] 98.4M 206.6G 640 45 52.2% / 51.9% 69.9% 56.5%\nYOLOv7-D6 154.7M 806.8G 1280 44 56.6% /56.3% 74.0% 61.8%\nYOLOv5-X6 (r6.1) [23] 140.7M 839.2G 1280 38 - / 55.0% - -\nYOLOv7-E6E 151.7M 843.2G 1280 36 56.8% /56.8% 74.4% 62.1%\nYOLOR-D6 [81] 151.7M 935.6G 1280 34 56.5% / 56.1% 74.1% 61.9%\nF-RCNN-R101-FPN+ [5] 60.0M 246.0G 1333 20 - / 44.0% - -\nDeformable DETR [100] 40.0M 173.0G - 19 - / 46.2% - -\nSwin-B (C-M-RCNN) [52] 145.0M 982.0G 1333 11.6 - / 51.9% - -\nDETR DC5-R101 [5] 60.0M 253.0G 1333 10 - / 44.9% - -\nEf\ufb01cientDet-D7x [74] 77.0M 410.0G 1536 6.5 55.1% / 54.4% 72.4% 58.4%\nDual-Swin-T (C-M-RCNN) [47] 113.8M 836.0G 1333 6.5 - / 53.6% - -\nViT-Adapter-B [7] 122.0M 997.0G - 4.4 - / 50.8% - -\nDual-Swin-B (HTC) [47] 235.0M - 1600 2.5 58.7% /58.4% - -\nDual-Swin-L (HTC) [47] 453.0M - 1600 1.5 59.4% /59.1% - -\nModel #Param.", "mimetype": "text/plain", "start_char_idx": 1242, "end_char_idx": 2458, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1aae2c9d-faaf-4d4b-b334-81ea497b1cb5": {"__data__": {"id_": "1aae2c9d-faaf-4d4b-b334-81ea497b1cb5", "embedding": null, "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75f70afd-2c93-41bc-91b4-9cca3f0d744c", "node_type": "4", "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "d47fd5f70dc1d03e6505cbf8876710e0aff9e744d4f503350d6cd7152b48e071", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d362fc9-1e95-4688-b73e-c27d22cf25aa", "node_type": "1", "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "d2cb79e5d61cf02712473d65afe4a0d42d636c6c0e7d45020272cbc632ca2ae3", "class_name": "RelatedNodeInfo"}}, "text": "0M 410.0G 1536 6.5 55.1% / 54.4% 72.4% 58.4%\nDual-Swin-T (C-M-RCNN) [47] 113.8M 836.0G 1333 6.5 - / 53.6% - -\nViT-Adapter-B [7] 122.0M 997.0G - 4.4 - / 50.8% - -\nDual-Swin-B (HTC) [47] 235.0M - 1600 2.5 58.7% /58.4% - -\nDual-Swin-L (HTC) [47] 453.0M - 1600 1.5 59.4% /59.1% - -\nModel #Param. FLOPs Size FPSA100APtest/APvalAPtest\n50APtest\n75\nDN-Deformable-DETR [41] 48.0M 265.0G 1333 23.0 - / 48.6% - -\nConvNeXt-B (C-M-RCNN) [53] - 964.0G 1280 11.5 - / 54.0% 73.1% 58.8%\nSwin-B (C-M-RCNN) [52] - 982.0G 1280 10.7 - / 53.0% 71.8% 57.5%\nDINO-5scale (R50) [89] 47.0M 860.0G 1333 10.0 - / 51.0% - -\nConvNeXt-L (C-M-RCNN) [53] - 1354.0G 1280 10.0 - / 54.8% 73.8% 59.8%\nSwin-L (C-M-RCNN) [52] - 1382.0G 1280 9.2 - / 53.9% 72.4% 58.8%\nConvNeXt-XL (C-M-RCNN) [53] - 1898.0G 1280 8.6 - / 55.2% 74.2% 59.9%\n8. More comparison\nYOLOv7 surpasses all known object detectors in both\nspeed and accuracy in the range from 5 FPS to 160 FPS and\nhas the highest accuracy 56.8% AP test-dev / 56.8% AP\nmin-val among all known real-time object detectors with 30\nFPS or higher on GPU V100. YOLOv7-E6 object detector\n(56 FPS V100, 55.9% AP) outperforms both transformer-\nbased detector SWIN-L Cascade-Mask R-CNN (9.2 FPS\nA100, 53.9% AP) by 509% in speed and 2% in accuracy,and convolutional-based detector ConvNeXt-XL Cascade-\nMask R-CNN (8.6 FPS A100, 55.2% AP) by 551% in speed\nand 0.7% AP in accuracy, as well as YOLOv7 outperforms:\nYOLOR, YOLOX, Scaled-YOLOv4, YOLOv5, DETR, De-\nformable DETR, DINO-5scale-R50, ViT-Adapter-B and\nmany other object detectors in speed and accuracy. More\nover, we train YOLOv7 only on MS COCO dataset from\nscratch without using any other datasets or pre-trained\nweights.\n10", "mimetype": "text/plain", "start_char_idx": 2167, "end_char_idx": 3848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7066f7a6-7ce2-4e23-b32b-7e22f662be89": {"__data__": {"id_": "7066f7a6-7ce2-4e23-b32b-7e22f662be89", "embedding": null, "metadata": {"page_label": "11", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f62c0401-f1dc-487b-9e91-9115f13ffd4f", "node_type": "4", "metadata": {"page_label": "11", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "4aac7b0daf41722bc37f857c898a8149f975584a09d5a144f53d2711e9a2110e", "class_name": "RelatedNodeInfo"}}, "text": "Figure 9: Comparison with other object detectors.\nFigure 10: Comparison with other real-time object detectors.\nTable 10: Comparison of different setting.\nModel Presicion IoU threshold APval\nYOLOv7-X FP16 (default) 0.65 (default) 52.9%\nYOLOv7-X FP32 0.65 53.0%\nYOLOv7-X FP16 0.70 53.0%\nYOLOv7-X FP32 0.70 53.1%\nimprovement - - +0.2%\n*Similar to meituan/YOLOv6 and PPYOLOE, our model could\nget higher AP when set higher IoU threshold.\nThe maximum accuracy of the YOLOv7-E6E (56.8%\nAP) real-time model is +13.7% AP higher than the cur-\nrent most accurate meituan/YOLOv6-s model (43.1% AP)\non COCO dataset. Our YOLOv7-tiny (35.2% AP, 0.4\nms) model is +25% faster and +0.2% AP higher than\nmeituan/YOLOv6-n (35.0% AP, 0.5 ms) under identical\nconditions on COCO dataset and V100 GPU with batch=32.\nFigure 11: Comparison with other real-time object detectors.\n11", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b0d1241-c4cd-4c88-9603-3de46457b937": {"__data__": {"id_": "2b0d1241-c4cd-4c88-9603-3de46457b937", "embedding": null, "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6281c9bd-bf64-43f2-bf9d-357e43b156d5", "node_type": "4", "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "6f134cf395b32f54d639dfc0da257a7422844716ecde3164ec509c7559bdc9b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c07f1e3-18c7-4d68-9622-2a4405314879", "node_type": "1", "metadata": {}, "hash": "3656a6bbfeeccdd126244cc15f40dcfbeca73dc9a7c87254c6f7f64a9bc06be7", "class_name": "RelatedNodeInfo"}}, "text": "References\n[1] anonymous. Designing network design strategies. anony-\nmous submission , 2022. 3\n[2] Irwan Bello, William Fedus, Xianzhi Du, Ekin Dogus\nCubuk, Aravind Srinivas, Tsung-Yi Lin, Jonathon Shlens,\nand Barret Zoph. Revisiting ResNets: Improved training\nand scaling strategies. Advances in Neural Information Pro-\ncessing Systems (NeurIPS) , 34, 2021. 2\n[3] Alexey Bochkovskiy, Chien-Yao Wang, and Hong-\nYuan Mark Liao. YOLOv4: Optimal speed and accuracy of\nobject detection. arXiv preprint arXiv:2004.10934 , 2020.\n2, 6, 7\n[4] Yue Cao, Thomas Andrew Geddes, Jean Yee Hwa Yang,\nand Pengyi Yang. Ensemble deep learning in bioinformat-\nics.Nature Machine Intelligence , 2(9):500\u2013508, 2020. 2\n[5] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nico-\nlas Usunier, Alexander Kirillov, and Sergey Zagoruyko.\nEnd-to-end object detection with transformers. In Pro-\nceedings of the European Conference on Computer Vision\n(ECCV) , pages 213\u2013229, 2020. 10\n[6] Kean Chen, Weiyao Lin, Jianguo Li, John See, Ji Wang, and\nJunni Zou. AP-loss for accurate one-stage object detection.\nIEEE Transactions on Pattern Analysis and Machine Intel-\nligence (TPAMI) , 43(11):3782\u20133798, 2020. 2\n[7] Zhe Chen, Yuchen Duan, Wenhai Wang, Junjun He, Tong\nLu, Jifeng Dai, and Yu Qiao. Vision transformer adapter for\ndense predictions. arXiv preprint arXiv:2205.08534 , 2022.\n10\n[8] Jiwoong Choi, Dayoung Chun, Hyun Kim, and Hyuk-Jae\nLee. Gaussian YOLOv3: An accurate and fast object detec-\ntor using localization uncertainty for autonomous driving.\nInProceedings of the IEEE/CVF International Conference\non Computer Vision (ICCV) , pages 502\u2013511, 2019. 5\n[9] Xiyang Dai, Yinpeng Chen, Bin Xiao, Dongdong Chen,\nMengchen Liu, Lu Yuan, and Lei Zhang. Dynamic head:\nUnifying object detection heads with attentions. In Pro-\nceedings of the IEEE/CVF Conference on Computer Vision\nand Pattern Recognition (CVPR) , pages 7373\u20137382, 2021.\n2\n[10] Xiaohan Ding, Honghao Chen, Xiangyu Zhang, Kaiqi\nHuang, Jungong Han, and Guiguang Ding. Re-\nparameterizing your optimizers rather than architectures.\narXiv preprint arXiv:2205.15242 , 2022. 2\n[11] Xiaohan Ding, Yuchen Guo, Guiguang Ding, and Jungong\nHan. ACNet: Strengthening the kernel skeletons for pow-\nerful CNN via asymmetric convolution blocks. In Proceed-\nings of the IEEE/CVF International Conference on Com-\nputer Vision (ICCV) , pages 1911\u20131920, 2019. 2\n[12] Xiaohan Ding, Xiangyu Zhang, Jungong Han, and\nGuiguang Ding. Diverse branch block: Building a con-\nvolution as an inception-like unit. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 10886\u201310895, 2021. 2\n[13] Xiaohan Ding, Xiangyu Zhang, Ningning Ma, Jungong\nHan, Guiguang Ding, and Jian Sun. RepVGG: Making\nVGG-style convnets great again. In Proceedings of theIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 13733\u201313742, 2021. 2, 4\n[14] Xiaohan Ding, Xiangyu Zhang, Yizhuang Zhou, Jungong\nHan, Guiguang Ding, and Jian Sun. Scaling up your ker-\nnels to 31x31: Revisiting large kernel design in CNNs.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c07f1e3-18c7-4d68-9622-2a4405314879": {"__data__": {"id_": "6c07f1e3-18c7-4d68-9622-2a4405314879", "embedding": null, "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6281c9bd-bf64-43f2-bf9d-357e43b156d5", "node_type": "4", "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "6f134cf395b32f54d639dfc0da257a7422844716ecde3164ec509c7559bdc9b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b0d1241-c4cd-4c88-9603-3de46457b937", "node_type": "1", "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "0f4eeee9eaa2feda41e3d7004c2159daa738041a7373661fa675293380189930", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29401257-bce6-4192-bb06-c20fee4eabb6", "node_type": "1", "metadata": {}, "hash": "b6fb24c53ec4175a7a2da8fd072e127737ae14954062f944a47077985dfc1208", "class_name": "RelatedNodeInfo"}}, "text": "Diverse branch block: Building a con-\nvolution as an inception-like unit. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 10886\u201310895, 2021. 2\n[13] Xiaohan Ding, Xiangyu Zhang, Ningning Ma, Jungong\nHan, Guiguang Ding, and Jian Sun. RepVGG: Making\nVGG-style convnets great again. In Proceedings of theIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 13733\u201313742, 2021. 2, 4\n[14] Xiaohan Ding, Xiangyu Zhang, Yizhuang Zhou, Jungong\nHan, Guiguang Ding, and Jian Sun. Scaling up your ker-\nnels to 31x31: Revisiting large kernel design in CNNs. In\nProceedings of the IEEE/CVF Conference on Computer Vi-\nsion and Pattern Recognition (CVPR) , 2022. 2\n[15] Piotr Doll \u00b4ar, Mannat Singh, and Ross Girshick. Fast and\naccurate model scaling. In Proceedings of the IEEE/CVF\nConference on Computer Vision and Pattern Recognition\n(CVPR) , pages 924\u2013932, 2021. 2, 3\n[16] Xianzhi Du, Barret Zoph, Wei-Chih Hung, and Tsung-Yi\nLin. Simple training strategies and model scaling for object\ndetection. arXiv preprint arXiv:2107.00057 , 2021. 2\n[17] Chengjian Feng, Yujie Zhong, Yu Gao, Matthew R Scott,\nand Weilin Huang. TOOD: Task-aligned one-stage object\ndetection. In Proceedings of the IEEE/CVF International\nConference on Computer Vision (ICCV) , pages 3490\u20133499,\n2021. 2, 5\n[18] Di Feng, Christian Haase-Sch \u00a8utz, Lars Rosenbaum, Heinz\nHertlein, Claudius Glaeser, Fabian Timm, Werner Wies-\nbeck, and Klaus Dietmayer. Deep multi-modal object de-\ntection and semantic segmentation for autonomous driv-\ning: Datasets, methods, and challenges. IEEE Transac-\ntions on Intelligent Transportation Systems , 22(3):1341\u2013\n1360, 2020. 1\n[19] Timur Garipov, Pavel Izmailov, Dmitrii Podoprikhin,\nDmitry P Vetrov, and Andrew G Wilson. Loss sur-\nfaces, mode connectivity, and fast ensembling of DNNs.\nAdvances in Neural Information Processing Systems\n(NeurIPS) , 31, 2018. 2\n[20] Zheng Ge, Songtao Liu, Zeming Li, Osamu Yoshie, and\nJian Sun. OTA: Optimal transport assignment for object\ndetection. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n303\u2013312, 2021. 2, 5\n[21] Zheng Ge, Songtao Liu, Feng Wang, Zeming Li, and Jian\nSun. YOLOX: Exceeding YOLO series in 2021. arXiv\npreprint arXiv:2107.08430 , 2021. 1, 2, 7, 10\n[22] Golnaz Ghiasi, Tsung-Yi Lin, and Quoc V Le. NAS-FPN:\nLearning scalable feature pyramid architecture for object\ndetection. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n7036\u20137045, 2019. 2\n[23] Jocher Glenn. YOLOv5 release v6.1. https://github.com/\nultralytics/yolov5/releases/tag/v6.1, 2022. 2, 7, 10\n[24] Shuxuan Guo, Jose M Alvarez, and Mathieu Salzmann. Ex-\npandNets: Linear over-parameterization to train compact\nconvolutional networks. Advances in Neural Information\nProcessing Systems (NeurIPS) , 33:1298\u20131310, 2020. 2\n[25] Kai Han, Yunhe Wang, Qi Tian, Jianyuan Guo, Chunjing\nXu, and Chang Xu. GhostNet: More features from cheap\noperations.", "mimetype": "text/plain", "start_char_idx": 2447, "end_char_idx": 5475, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29401257-bce6-4192-bb06-c20fee4eabb6": {"__data__": {"id_": "29401257-bce6-4192-bb06-c20fee4eabb6", "embedding": null, "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6281c9bd-bf64-43f2-bf9d-357e43b156d5", "node_type": "4", "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "6f134cf395b32f54d639dfc0da257a7422844716ecde3164ec509c7559bdc9b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c07f1e3-18c7-4d68-9622-2a4405314879", "node_type": "1", "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "44f1ded951c2b636a4b159dae26e6e55aa0db2fd11e0a6abc842b99427754d92", "class_name": "RelatedNodeInfo"}}, "text": "2\n[23] Jocher Glenn. YOLOv5 release v6.1. https://github.com/\nultralytics/yolov5/releases/tag/v6.1, 2022. 2, 7, 10\n[24] Shuxuan Guo, Jose M Alvarez, and Mathieu Salzmann. Ex-\npandNets: Linear over-parameterization to train compact\nconvolutional networks. Advances in Neural Information\nProcessing Systems (NeurIPS) , 33:1298\u20131310, 2020. 2\n[25] Kai Han, Yunhe Wang, Qi Tian, Jianyuan Guo, Chunjing\nXu, and Chang Xu. GhostNet: More features from cheap\noperations. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n1580\u20131589, 2020. 1\n[26] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.\nDeep residual learning for image recognition. In Proceed-\n12", "mimetype": "text/plain", "start_char_idx": 5014, "end_char_idx": 5715, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21cd10f5-c5ad-4ed1-b7cd-565561991094": {"__data__": {"id_": "21cd10f5-c5ad-4ed1-b7cd-565561991094", "embedding": null, "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69ed1f35-9835-4cb7-9889-b1ac13b3e54b", "node_type": "4", "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "b8c3e676a7e409adee4f32b1f2e3b4d60e6f591d794c28003c0d1621ef8c8e50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d766d3f-3be9-4f92-a0ee-8681464e2c38", "node_type": "1", "metadata": {}, "hash": "e89e45205568aee9249dd3bd74f04ca30a16463a9d552f0048d97d3763e902ba", "class_name": "RelatedNodeInfo"}}, "text": "ings of the IEEE/CVF Conference on Computer Vision and\nPattern Recognition (CVPR) , pages 770\u2013778, 2016. 1, 4, 5\n[27] Andrew Howard, Mark Sandler, Grace Chu, Liang-Chieh\nChen, Bo Chen, Mingxing Tan, Weijun Wang, Yukun Zhu,\nRuoming Pang, Vijay Vasudevan, et al. Searching for Mo-\nbileNetV3. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n1314\u20131324, 2019. 1\n[28] Andrew G Howard, Menglong Zhu, Bo Chen, Dmitry\nKalenichenko, Weijun Wang, Tobias Weyand, Marco An-\ndreetto, and Hartwig Adam. MobileNets: Ef\ufb01cient con-\nvolutional neural networks for mobile vision applications.\narXiv preprint arXiv:1704.04861 , 2017. 1\n[29] Mu Hu, Junyi Feng, Jiashen Hua, Baisheng Lai, Jian-\nqiang Huang, Xiaojin Gong, and Xiansheng Hua. On-\nline convolutional re-parameterization. In Proceedings of\nthe IEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , 2022. 2\n[30] Miao Hu, Yali Li, Lu Fang, and Shengjin Wang. A2-FPN:\nAttention aggregation based feature pyramid network for\ninstance segmentation. In Proceedings of the IEEE/CVF\nConference on Computer Vision and Pattern Recognition\n(CVPR) , pages 15343\u201315352, 2021. 2\n[31] Gao Huang, Yixuan Li, Geoff Pleiss, Zhuang Liu, John E\nHopcroft, and Kilian Q Weinberger. Snapshot ensembles:\nTrain 1, get m for free. International Conference on Learn-\ning Representations (ICLR) , 2017. 2\n[32] Gao Huang, Zhuang Liu, Laurens Van Der Maaten, and Kil-\nian Q Weinberger. Densely connected convolutional net-\nworks. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n4700\u20134708, 2017. 2, 4, 5\n[33] Pavel Izmailov, Dmitrii Podoprikhin, Timur Garipov,\nDmitry Vetrov, and Andrew Gordon Wilson. Averaging\nweights leads to wider optima and better generalization. In\nConference on Uncertainty in Arti\ufb01cial Intelligence (UAI) ,\n2018. 2\n[34] Paul F Jaeger, Simon AA Kohl, Sebastian Bickel-\nhaupt, Fabian Isensee, Tristan Anselm Kuder, Heinz-Peter\nSchlemmer, and Klaus H Maier-Hein. Retina U-Net: Em-\nbarrassingly simple exploitation of segmentation supervi-\nsion for medical object detection. In Machine Learning for\nHealth Workshop , pages 171\u2013183, 2020. 1\n[35] Hakan Karaoguz and Patric Jensfelt. Object detection ap-\nproach for robot grasp detection. In IEEE International\nConference on Robotics and Automation (ICRA) , pages\n4953\u20134959, 2019. 1\n[36] Kang Kim and Hee Seok Lee. Probabilistic anchor as-\nsignment with iou prediction for object detection. In Pro-\nceedings of the European conference on computer vision\n(ECCV) , pages 355\u2013371, 2020. 5\n[37] Alexander Kirillov, Ross Girshick, Kaiming He, and Piotr\nDoll\u00b4ar. Panoptic feature pyramid networks. In Proceed-\nings of the IEEE/CVF Conference on Computer Vision and\nPattern Recognition (CVPR) , pages 6399\u20136408, 2019. 2\n[38] Chen-Yu Lee, Saining Xie, Patrick Gallagher, Zhengyou\nZhang, and Zhuowen Tu. Deeply-supervised nets. In Arti-\n\ufb01cial Intelligence and Statistics , pages 562\u2013570, 2015. 5[39] Youngwan Lee, Joong-won Hwang, Sangrok Lee, Yuseok\nBae, and Jongyoul Park. An energy and GPU-computation\nef\ufb01cient backbone network for real-time object detection.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3152, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d766d3f-3be9-4f92-a0ee-8681464e2c38": {"__data__": {"id_": "8d766d3f-3be9-4f92-a0ee-8681464e2c38", "embedding": null, "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69ed1f35-9835-4cb7-9889-b1ac13b3e54b", "node_type": "4", "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "b8c3e676a7e409adee4f32b1f2e3b4d60e6f591d794c28003c0d1621ef8c8e50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21cd10f5-c5ad-4ed1-b7cd-565561991094", "node_type": "1", "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "aa18ad1bbf8a155c839b8b16f61ee7d103600be7160b97c3213afdae776382e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e795da50-a35a-4b22-ba7b-23e5884b9846", "node_type": "1", "metadata": {}, "hash": "80aa55d0bdcb357a304d99002fd3d49d4df237641cbb92d2ba9033c5d95667be", "class_name": "RelatedNodeInfo"}}, "text": "5\n[37] Alexander Kirillov, Ross Girshick, Kaiming He, and Piotr\nDoll\u00b4ar. Panoptic feature pyramid networks. In Proceed-\nings of the IEEE/CVF Conference on Computer Vision and\nPattern Recognition (CVPR) , pages 6399\u20136408, 2019. 2\n[38] Chen-Yu Lee, Saining Xie, Patrick Gallagher, Zhengyou\nZhang, and Zhuowen Tu. Deeply-supervised nets. In Arti-\n\ufb01cial Intelligence and Statistics , pages 562\u2013570, 2015. 5[39] Youngwan Lee, Joong-won Hwang, Sangrok Lee, Yuseok\nBae, and Jongyoul Park. An energy and GPU-computation\nef\ufb01cient backbone network for real-time object detection.\nInProceedings of the IEEE/CVF Conference on Com-\nputer Vision and Pattern Recognition Workshops (CVPRW) ,\npages 0\u20130, 2019. 2, 3\n[40] Buyu Li, Wanli Ouyang, Lu Sheng, Xingyu Zeng, and\nXiaogang Wang. GS3D: An ef\ufb01cient 3d object detection\nframework for autonomous driving. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 1019\u20131028, 2019. 1\n[41] Feng Li, Hao Zhang, Shilong Liu, Jian Guo, Lionel M\nNi, and Lei Zhang. DN-DETR: Accelerate detr training\nby introducing query denoising. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 13619\u201313627, 2022. 10\n[42] Shuai Li, Chenhang He, Ruihuang Li, and Lei Zhang. A\ndual weighting label assignment scheme for object detec-\ntion. In Proceedings of the IEEE/CVF Conference on Com-\nputer Vision and Pattern Recognition (CVPR) , pages 9387\u2013\n9396, 2022. 2, 5\n[43] Xiang Li, Wenhai Wang, Xiaolin Hu, Jun Li, Jinhui Tang,\nand Jian Yang. Generalized focal loss v2: Learning reliable\nlocalization quality estimation for dense object detection. In\nProceedings of the IEEE/CVF Conference on Computer Vi-\nsion and Pattern Recognition (CVPR) , pages 11632\u201311641,\n2021. 5\n[44] Xiang Li, Wenhai Wang, Lijun Wu, Shuo Chen, Xiaolin\nHu, Jun Li, Jinhui Tang, and Jian Yang. Generalized focal\nloss: Learning quali\ufb01ed and distributed bounding boxes for\ndense object detection. Advances in Neural Information\nProcessing Systems (NeurIPS) , 33:21002\u201321012, 2020. 5\n[45] Yanghao Li, Hanzi Mao, Ross Girshick, and Kaiming He.\nExploring plain vision transformer backbones for object de-\ntection. arXiv preprint arXiv:2203.16527 , 2022. 2\n[46] Zhuoling Li, Minghui Dong, Shiping Wen, Xiang Hu, Pan\nZhou, and Zhigang Zeng. CLU-CNNs: Object detection for\nmedical images. Neurocomputing , 350:53\u201359, 2019. 1\n[47] Tingting Liang, Xiaojie Chu, Yudong Liu, Yongtao Wang,\nZhi Tang, Wei Chu, Jingdong Chen, and Haibin Ling. CB-\nNetV2: A composite backbone network architecture for ob-\nject detection. arXiv preprint arXiv:2107.00420 , 2021. 5,\n10\n[48] Ji Lin, Wei-Ming Chen, Han Cai, Chuang Gan, and Song\nHan. Memory-ef\ufb01cient patch-based inference for tiny deep\nlearning. Advances in Neural Information Processing Sys-\ntems (NeurIPS) , 34:2346\u20132358, 2021. 1\n[49] Ji Lin, Wei-Ming Chen, Yujun Lin, Chuang Gan, Song\nHan, et al. MCUNet: Tiny deep learning on IoT de-\nvices. Advances in Neural Information Processing Systems\n(NeurIPS) , 33:11711\u201311722, 2020.", "mimetype": "text/plain", "start_char_idx": 2583, "end_char_idx": 5617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e795da50-a35a-4b22-ba7b-23e5884b9846": {"__data__": {"id_": "e795da50-a35a-4b22-ba7b-23e5884b9846", "embedding": null, "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69ed1f35-9835-4cb7-9889-b1ac13b3e54b", "node_type": "4", "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "b8c3e676a7e409adee4f32b1f2e3b4d60e6f591d794c28003c0d1621ef8c8e50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d766d3f-3be9-4f92-a0ee-8681464e2c38", "node_type": "1", "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "d5901d4942c4d09f1f05dfe60db258db462622ca84fb087e100494e735e69485", "class_name": "RelatedNodeInfo"}}, "text": "CB-\nNetV2: A composite backbone network architecture for ob-\nject detection. arXiv preprint arXiv:2107.00420 , 2021. 5,\n10\n[48] Ji Lin, Wei-Ming Chen, Han Cai, Chuang Gan, and Song\nHan. Memory-ef\ufb01cient patch-based inference for tiny deep\nlearning. Advances in Neural Information Processing Sys-\ntems (NeurIPS) , 34:2346\u20132358, 2021. 1\n[49] Ji Lin, Wei-Ming Chen, Yujun Lin, Chuang Gan, Song\nHan, et al. MCUNet: Tiny deep learning on IoT de-\nvices. Advances in Neural Information Processing Systems\n(NeurIPS) , 33:11711\u201311722, 2020. 1\n[50] Yuxuan Liu, Lujia Wang, and Ming Liu. YOLOStereo3D:\nA step back to 2D for ef\ufb01cient stereo 3D detection. In\nIEEE International Conference on Robotics and Automa-\ntion (ICRA) , pages 13018\u201313024, 2021. 5\n[51] Ze Liu, Han Hu, Yutong Lin, Zhuliang Yao, Zhenda Xie,\nYixuan Wei, Jia Ning, Yue Cao, Zheng Zhang, Li Dong,\n13", "mimetype": "text/plain", "start_char_idx": 5087, "end_char_idx": 5941, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7ef32dd-1286-414c-aba3-e7328e4cca04": {"__data__": {"id_": "e7ef32dd-1286-414c-aba3-e7328e4cca04", "embedding": null, "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62862598-7b5a-4f28-b474-34d071e70ab6", "node_type": "4", "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "3d5bbd76caaa6930071c008ae7f46958314fa45c90f0af91035cf0b0b818f77a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e849645c-e8f3-445f-931c-4f4210763724", "node_type": "1", "metadata": {}, "hash": "46f710525d2639460b91cbcb652f155a3fc4c651ed0661d7865e402bb17109d0", "class_name": "RelatedNodeInfo"}}, "text": "et al. Swin transformer v2: Scaling up capacity and res-\nolution. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , 2022. 2\n[52] Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng\nZhang, Stephen Lin, and Baining Guo. Swin transformer:\nHierarchical vision transformer using shifted windows. In\nProceedings of the IEEE/CVF International Conference on\nComputer Vision (ICCV) , pages 10012\u201310022, 2021. 10\n[53] Zhuang Liu, Hanzi Mao, Chao-Yuan Wu, Christoph Feicht-\nenhofer, Trevor Darrell, and Saining Xie. A ConvNet for\nthe 2020s. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n11976\u201311986, 2022. 10\n[54] Rangi Lyu. NanoDet-Plus. https://github.com/RangiLyu/\nnanodet/releases/tag/v1.0.0-alpha-1, 2021. 1, 2\n[55] Ningning Ma, Xiangyu Zhang, Hai-Tao Zheng, and Jian\nSun. Shuf\ufb02eNet V2: Practical guidelines for ef\ufb01cient CNN\narchitecture design. In Proceedings of the European Con-\nference on Computer Vision (ECCV) , pages 116\u2013131, 2018.\n1, 3\n[56] Kemal Oksuz, Baris Can Cam, Emre Akbas, and Sinan\nKalkan. A ranking-based, balanced loss function unifying\nclassi\ufb01cation and localisation in object detection. Advances\nin Neural Information Processing Systems (NeurIPS) ,\n33:15534\u201315545, 2020. 2\n[57] Kemal Oksuz, Baris Can Cam, Emre Akbas, and Sinan\nKalkan. Rank & sort loss for object detection and in-\nstance segmentation. In Proceedings of the IEEE/CVF In-\nternational Conference on Computer Vision (ICCV) , pages\n3009\u20133018, 2021. 2\n[58] Shuvo Kumar Paul, Muhammed Taw\ufb01q Chowdhury,\nMircea Nicolescu, Monica Nicolescu, and David Feil-\nSeifer. Object detection and pose estimation from rgb and\ndepth data for real-time, adaptive robotic grasping. In Ad-\nvances in Computer Vision and Computational Biology ,\npages 121\u2013142. 2021. 1\n[59] Siyuan Qiao, Liang-Chieh Chen, and Alan Yuille. De-\ntectoRS: Detecting objects with recursive feature pyramid\nand switchable atrous convolution. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 10213\u201310224, 2021. 2\n[60] Ilija Radosavovic, Raj Prateek Kosaraju, Ross Girshick,\nKaiming He, and Piotr Doll \u00b4ar. Designing network design\nspaces. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n10428\u201310436, 2020. 2\n[61] Joseph Redmon, Santosh Divvala, Ross Girshick, and Ali\nFarhadi. You only look once: Uni\ufb01ed, real-time object de-\ntection. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n779\u2013788, 2016. 2, 5\n[62] Joseph Redmon and Ali Farhadi. YOLO9000: better, faster,\nstronger. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n7263\u20137271, 2017. 2\n[63] Joseph Redmon and Ali Farhadi. YOLOv3: An incremental\nimprovement. arXiv preprint arXiv:1804.02767 , 2018. 1, 2[64] Hamid Rezato\ufb01ghi, Nathan Tsoi, JunYoung Gwak, Amir\nSadeghian, Ian Reid, and Silvio Savarese. Generalized in-\ntersection over union: A metric and a loss for bounding\nbox regression.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3083, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e849645c-e8f3-445f-931c-4f4210763724": {"__data__": {"id_": "e849645c-e8f3-445f-931c-4f4210763724", "embedding": null, "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62862598-7b5a-4f28-b474-34d071e70ab6", "node_type": "4", "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "3d5bbd76caaa6930071c008ae7f46958314fa45c90f0af91035cf0b0b818f77a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7ef32dd-1286-414c-aba3-e7328e4cca04", "node_type": "1", "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "2b38df2d19c427c3a909456e873dd7feb2fdd1c5fa9b39910d23cfc49ccf8daf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa3f3495-a93f-42e3-b661-e01522e4cc68", "node_type": "1", "metadata": {}, "hash": "f0aa3b73e9d608e2809d9a8d298ca682ebf0e7eccbf3df8f24e6d4ece0636060", "class_name": "RelatedNodeInfo"}}, "text": "2, 5\n[62] Joseph Redmon and Ali Farhadi. YOLO9000: better, faster,\nstronger. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n7263\u20137271, 2017. 2\n[63] Joseph Redmon and Ali Farhadi. YOLOv3: An incremental\nimprovement. arXiv preprint arXiv:1804.02767 , 2018. 1, 2[64] Hamid Rezato\ufb01ghi, Nathan Tsoi, JunYoung Gwak, Amir\nSadeghian, Ian Reid, and Silvio Savarese. Generalized in-\ntersection over union: A metric and a loss for bounding\nbox regression. In Proceedings of the IEEE/CVF Confer-\nence on Computer Vision and Pattern Recognition (CVPR) ,\npages 658\u2013666, 2019. 2\n[65] Byungseok Roh, JaeWoong Shin, Wuhyun Shin, and\nSaehoon Kim. Sparse DETR: Ef\ufb01cient end-to-end ob-\nject detection with learnable sparsity. arXiv preprint\narXiv:2111.14330 , 2021. 5\n[66] Mark Sandler, Andrew Howard, Menglong Zhu, Andrey\nZhmoginov, and Liang-Chieh Chen. MobileNetV2: In-\nverted residuals and linear bottlenecks. In Proceedings of\nthe IEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 4510\u20134520, 2018. 1\n[67] Zhiqiang Shen, Zhuang Liu, Jianguo Li, Yu-Gang Jiang,\nYurong Chen, and Xiangyang Xue. Object detection\nfrom scratch with deep supervision. IEEE Transactions\non Pattern Analysis and Machine Intelligence (TPAMI) ,\n42(2):398\u2013412, 2019. 5\n[68] Karen Simonyan and Andrew Zisserman. Very deep convo-\nlutional networks for large-scale image recognition. arXiv\npreprint arXiv:1409.1556 , 2014. 4\n[69] Peize Sun, Rufeng Zhang, Yi Jiang, Tao Kong, Chenfeng\nXu, Wei Zhan, Masayoshi Tomizuka, Lei Li, Zehuan Yuan,\nChanghu Wang, et al. Sparse R-CNN: End-to-end ob-\nject detection with learnable proposals. In Proceedings of\nthe IEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 14454\u201314463, 2021. 2\n[70] Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet,\nScott Reed, Dragomir Anguelov, Dumitru Erhan, Vincent\nVanhoucke, and Andrew Rabinovich. Going deeper with\nconvolutions. In Proceedings of the IEEE/CVF Confer-\nence on Computer Vision and Pattern Recognition (CVPR) ,\npages 1\u20139, 2015. 5\n[71] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon\nShlens, and Zbigniew Wojna. Rethinking the inception\narchitecture for computer vision. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 2818\u20132826, 2016. 2\n[72] Mingxing Tan and Quoc Le. Ef\ufb01cientNet: Rethinking\nmodel scaling for convolutional neural networks. In Inter-\nnational Conference on Machine Learning (ICML) , pages\n6105\u20136114, 2019. 2, 3\n[73] Mingxing Tan and Quoc Le. Ef\ufb01cientNetv2: Smaller mod-\nels and faster training. In International Conference on Ma-\nchine Learning (ICML) , pages 10096\u201310106, 2021. 2\n[74] Mingxing Tan, Ruoming Pang, and Quoc V Le. Ef\ufb01cient-\nDet: Scalable and ef\ufb01cient object detection. In Proceedings\nof the IEEE/CVF Conference on Computer Vision and Pat-\ntern Recognition (CVPR) , pages 10781\u201310790, 2020. 2, 10\n[75] Antti Tarvainen and Harri Valpola.", "mimetype": "text/plain", "start_char_idx": 2586, "end_char_idx": 5567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa3f3495-a93f-42e3-b661-e01522e4cc68": {"__data__": {"id_": "fa3f3495-a93f-42e3-b661-e01522e4cc68", "embedding": null, "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62862598-7b5a-4f28-b474-34d071e70ab6", "node_type": "4", "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "3d5bbd76caaa6930071c008ae7f46958314fa45c90f0af91035cf0b0b818f77a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e849645c-e8f3-445f-931c-4f4210763724", "node_type": "1", "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "2321254ab80f8a21f6d703f46e96f63403539167af174cc49f0a1d4db46f0149", "class_name": "RelatedNodeInfo"}}, "text": "Ef\ufb01cientNet: Rethinking\nmodel scaling for convolutional neural networks. In Inter-\nnational Conference on Machine Learning (ICML) , pages\n6105\u20136114, 2019. 2, 3\n[73] Mingxing Tan and Quoc Le. Ef\ufb01cientNetv2: Smaller mod-\nels and faster training. In International Conference on Ma-\nchine Learning (ICML) , pages 10096\u201310106, 2021. 2\n[74] Mingxing Tan, Ruoming Pang, and Quoc V Le. Ef\ufb01cient-\nDet: Scalable and ef\ufb01cient object detection. In Proceedings\nof the IEEE/CVF Conference on Computer Vision and Pat-\ntern Recognition (CVPR) , pages 10781\u201310790, 2020. 2, 10\n[75] Antti Tarvainen and Harri Valpola. Mean teachers are better\nrole models: Weight-averaged consistency targets improve\nsemi-supervised deep learning results. Advances in Neural\nInformation Processing Systems (NeurIPS) , 30, 2017. 2, 6\n[76] Zhi Tian, Chunhua Shen, Hao Chen, and Tong He. FCOS:\nFully convolutional one-stage object detection. In Proceed-\n14", "mimetype": "text/plain", "start_char_idx": 4968, "end_char_idx": 5886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ff938a9-43b5-48e3-b7ad-38cd82587432": {"__data__": {"id_": "0ff938a9-43b5-48e3-b7ad-38cd82587432", "embedding": null, "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "781a2c44-b463-4705-b1b9-987c9aba0036", "node_type": "4", "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "45b85b4c12e6476f50dfcfeaec415b9cbe77fe493738eb0d061873326dad85c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8457a402-5fe7-438e-accf-f92bac836f5a", "node_type": "1", "metadata": {}, "hash": "d54282e37739cfaeecb3ab91a1df1627a79ab4e2bc659a1912de6547c0079c8f", "class_name": "RelatedNodeInfo"}}, "text": "ings of the IEEE/CVF International Conference on Com-\nputer Vision (ICCV) , pages 9627\u20139636, 2019. 2\n[77] Zhi Tian, Chunhua Shen, Hao Chen, and Tong He. FCOS:\nA simple and strong anchor-free object detector. IEEE\nTransactions on Pattern Analysis and Machine Intelligence\n(TPAMI) , 44(4):1922\u20131933, 2022. 2\n[78] Pavan Kumar Anasosalu Vasu, James Gabriel, Jeff\nZhu, Oncel Tuzel, and Anurag Ranjan. An im-\nproved one millisecond mobile backbone. arXiv preprint\narXiv:2206.04040 , 2022. 2\n[79] Chien-Yao Wang, Alexey Bochkovskiy, and Hong-\nYuan Mark Liao. Scaled-YOLOv4: Scaling cross stage\npartial network. In Proceedings of the IEEE/CVF Confer-\nence on Computer Vision and Pattern Recognition (CVPR) ,\npages 13029\u201313038, 2021. 2, 3, 6, 7\n[80] Chien-Yao Wang, Hong-Yuan Mark Liao, Yueh-Hua Wu,\nPing-Yang Chen, Jun-Wei Hsieh, and I-Hau Yeh. CSP-\nNet: A new backbone that can enhance learning capabil-\nity of CNN. In Proceedings of the IEEE/CVF Conference\non Computer Vision and Pattern Recognition Workshops\n(CVPRW) , pages 390\u2013391, 2020. 1\n[81] Chien-Yao Wang, I-Hau Yeh, and Hong-Yuan Mark Liao.\nYou only learn one representation: Uni\ufb01ed network for\nmultiple tasks. arXiv preprint arXiv:2105.04206 , 2021. 1,\n2, 6, 7, 10\n[82] Jianfeng Wang, Lin Song, Zeming Li, Hongbin Sun, Jian\nSun, and Nanning Zheng. End-to-end object detection\nwith fully convolutional network. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 15849\u201315858, 2021. 2, 5\n[83] Bichen Wu, Chaojian Li, Hang Zhang, Xiaoliang Dai,\nPeizhao Zhang, Matthew Yu, Jialiang Wang, Yingyan Lin,\nand Peter Vajda. FBNetv5: Neural architecture search for\nmultiple tasks in one run. arXiv preprint arXiv:2111.10007 ,\n2021. 1\n[84] Yunyang Xiong, Hanxiao Liu, Suyog Gupta, Berkin Akin,\nGabriel Bender, Yongzhe Wang, Pieter-Jan Kindermans,\nMingxing Tan, Vikas Singh, and Bo Chen. MobileDets:\nSearching for object detection architectures for mobile ac-\ncelerators. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n3825\u20133834, 2021. 1\n[85] Shangliang Xu, Xinxin Wang, Wenyu Lv, Qinyao\nChang, Cheng Cui, Kaipeng Deng, Guanzhong Wang,\nQingqing Dang, Shengyu Wei, Yuning Du, et al. PP-\nYOLOE: An evolved version of YOLO. arXiv preprint\narXiv:2203.16250 , 2022. 2, 7, 8, 10\n[86] Zetong Yang, Yin Zhou, Zhifeng Chen, and Jiquan Ngiam.\n3D-MAN: 3D multi-frame attention network for object de-\ntection. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n1863\u20131872, 2021. 5\n[87] Fisher Yu, Dequan Wang, Evan Shelhamer, and Trevor\nDarrell. Deep layer aggregation. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 2403\u20132412, 2018. 1\n[88] Guanghua Yu, Qinyao Chang, Wenyu Lv, Chang Xu, Cheng\nCui, Wei Ji, Qingqing Dang, Kaipeng Deng, GuanzhongWang, Yuning Du, et al.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2899, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8457a402-5fe7-438e-accf-f92bac836f5a": {"__data__": {"id_": "8457a402-5fe7-438e-accf-f92bac836f5a", "embedding": null, "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "781a2c44-b463-4705-b1b9-987c9aba0036", "node_type": "4", "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "45b85b4c12e6476f50dfcfeaec415b9cbe77fe493738eb0d061873326dad85c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ff938a9-43b5-48e3-b7ad-38cd82587432", "node_type": "1", "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "e710dfd4cdb7254d190b0f94ef638b5b1852bea3850cb9a8d059ba157b4e7e4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1dd4086-3686-426d-91ce-bc336fea4ff8", "node_type": "1", "metadata": {}, "hash": "0baee8e4692a463951e6c7263d338fa13bab8ab676f37855adba4fc95cfab9de", "class_name": "RelatedNodeInfo"}}, "text": "3D-MAN: 3D multi-frame attention network for object de-\ntection. In Proceedings of the IEEE/CVF Conference on\nComputer Vision and Pattern Recognition (CVPR) , pages\n1863\u20131872, 2021. 5\n[87] Fisher Yu, Dequan Wang, Evan Shelhamer, and Trevor\nDarrell. Deep layer aggregation. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 2403\u20132412, 2018. 1\n[88] Guanghua Yu, Qinyao Chang, Wenyu Lv, Chang Xu, Cheng\nCui, Wei Ji, Qingqing Dang, Kaipeng Deng, GuanzhongWang, Yuning Du, et al. PP-PicoDet: A better real-\ntime object detector on mobile devices. arXiv preprint\narXiv:2111.00902 , 2021. 1\n[89] Hao Zhang, Feng Li, Shilong Liu, Lei Zhang, Hang Su, Jun\nZhu, Lionel M Ni, and Heung-Yeung Shum. DINO: DETR\nwith improved denoising anchor boxes for end-to-end ob-\nject detection. arXiv preprint arXiv:2203.03605 , 2022. 10\n[90] Haoyang Zhang, Ying Wang, Feras Dayoub, and Niko Sun-\nderhauf. VarifocalNet: An IoU-aware dense object detector.\nInProceedings of the IEEE/CVF Conference on Computer\nVision and Pattern Recognition (CVPR) , pages 8514\u20138523,\n2021. 5\n[91] Shifeng Zhang, Cheng Chi, Yongqiang Yao, Zhen Lei, and\nStan Z Li. Bridging the gap between anchor-based and\nanchor-free detection via adaptive training sample selec-\ntion. In Proceedings of the IEEE/CVF Conference on Com-\nputer Vision and Pattern Recognition (CVPR) , pages 9759\u2013\n9768, 2020. 5\n[92] Xiangyu Zhang, Xinyu Zhou, Mengxiao Lin, and Jian\nSun. Shuf\ufb02eNet: An extremely ef\ufb01cient convolutional neu-\nral network for mobile devices. In Proceedings of the\nIEEE/CVF Conference on Computer Vision and Pattern\nRecognition (CVPR) , pages 6848\u20136856, 2018. 1\n[93] Yifu Zhang, Peize Sun, Yi Jiang, Dongdong Yu, Zehuan\nYuan, Ping Luo, Wenyu Liu, and Xinggang Wang. BYTE-\nTrack: Multi-object tracking by associating every detection\nbox. arXiv preprint arXiv:2110.06864 , 2021. 1\n[94] Yifu Zhang, Chunyu Wang, Xinggang Wang, Wenjun Zeng,\nand Wenyu Liu. FAIRMOT: On the fairness of detec-\ntion and re-identi\ufb01cation in multiple object tracking. Inter-\nnational Journal of Computer Vision , 129(11):3069\u20133087,\n2021. 1\n[95] Zhaohui Zheng, Ping Wang, Wei Liu, Jinze Li, Rongguang\nYe, and Dongwei Ren. Distance-IoU loss: Faster and bet-\nter learning for bounding box regression. In Proceedings\nof the AAAI Conference on Arti\ufb01cial Intelligence (AAAI) ,\nvolume 34, pages 12993\u201313000, 2020. 2\n[96] Dingfu Zhou, Jin Fang, Xibin Song, Chenye Guan, Junbo\nYin, Yuchao Dai, and Ruigang Yang. IoU loss for 2D/3D\nobject detection. In International Conference on 3D Vision\n(3DV) , pages 85\u201394, 2019. 2\n[97] Xingyi Zhou, Dequan Wang, and Philipp Kr \u00a8ahenb \u00a8uhl. Ob-\njects as points. arXiv preprint arXiv:1904.07850 , 2019. 1,\n2\n[98] Zongwei Zhou, Md Mahfuzur Rahman Siddiquee, Nima\nTajbakhsh, and Jianming Liang. UNet++: A nested U-\nNet architecture for medical image segmentation. In\nDeep Learning in Medical Image Analysis and Multimodal\nLearning for Clinical Decision Support , 2018.", "mimetype": "text/plain", "start_char_idx": 2375, "end_char_idx": 5340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1dd4086-3686-426d-91ce-bc336fea4ff8": {"__data__": {"id_": "f1dd4086-3686-426d-91ce-bc336fea4ff8", "embedding": null, "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "781a2c44-b463-4705-b1b9-987c9aba0036", "node_type": "4", "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "45b85b4c12e6476f50dfcfeaec415b9cbe77fe493738eb0d061873326dad85c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8457a402-5fe7-438e-accf-f92bac836f5a", "node_type": "1", "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}, "hash": "72615e1934a781f639a6e7dc8bb5169cdfa112af473232b911e4c45ddcafb102", "class_name": "RelatedNodeInfo"}}, "text": "IoU loss for 2D/3D\nobject detection. In International Conference on 3D Vision\n(3DV) , pages 85\u201394, 2019. 2\n[97] Xingyi Zhou, Dequan Wang, and Philipp Kr \u00a8ahenb \u00a8uhl. Ob-\njects as points. arXiv preprint arXiv:1904.07850 , 2019. 1,\n2\n[98] Zongwei Zhou, Md Mahfuzur Rahman Siddiquee, Nima\nTajbakhsh, and Jianming Liang. UNet++: A nested U-\nNet architecture for medical image segmentation. In\nDeep Learning in Medical Image Analysis and Multimodal\nLearning for Clinical Decision Support , 2018. 5\n[99] Benjin Zhu, Jianfeng Wang, Zhengkai Jiang, Fuhang Zong,\nSongtao Liu, Zeming Li, and Jian Sun. AutoAssign: Differ-\nentiable label assignment for dense object detection. arXiv\npreprint arXiv:2007.03496 , 2020. 2, 5\n[100] Xizhou Zhu, Weijie Su, Lewei Lu, Bin Li, Xiaogang Wang,\nand Jifeng Dai. Deformable DETR: Deformable trans-\nformers for end-to-end object detection. In Proceedings of\nthe International Conference on Learning Representations\n(ICLR) , 2021. 10\n15", "mimetype": "text/plain", "start_char_idx": 4850, "end_char_idx": 5810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"23b43534-0f7c-441a-b00c-2a396fa97e13": {"node_ids": ["e88c2564-ee00-4fdb-af7a-33c1f536f055"], "metadata": {"page_label": "1", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "69a0551c-60ad-4c34-ae4f-0ae8f7851336": {"node_ids": ["42093df0-27ff-4f56-b4e4-2831c5c5e190"], "metadata": {"page_label": "2", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "ff15331f-a9e9-42ca-8bd0-30a9908edb88": {"node_ids": ["bb19552f-38d1-400c-9f1e-e7b4858fb6bc"], "metadata": {"page_label": "3", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "fa82cc69-2897-4bdb-9fca-34434cb18be6": {"node_ids": ["99f78064-4276-4c1d-8366-bc4b25c88256"], "metadata": {"page_label": "4", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "00393fdf-4fab-43c5-8f8e-43fa1eb29cb9": {"node_ids": ["c965c1d2-e84a-48e9-a317-6e9f3af7f765"], "metadata": {"page_label": "5", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "16afe49f-2bdd-40d5-9a11-f8f605e0b3d7": {"node_ids": ["ea29b0d6-44c4-43d3-a621-101044032bdc"], "metadata": {"page_label": "6", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "04689a52-3381-40b8-8f03-670abd4de8ce": {"node_ids": ["8ba9fe15-12be-435f-867d-c661bef5510a"], "metadata": {"page_label": "7", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "e0b2de8d-ff0e-46bb-a65a-ff5fa24e6c04": {"node_ids": ["01cefc1d-91bf-45da-a8e3-a8fab968bd90"], "metadata": {"page_label": "8", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "22238510-3d8c-489c-a495-0ed551a48373": {"node_ids": ["a143a4e9-4514-4135-bfbb-5682eb8e9d82"], "metadata": {"page_label": "9", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "783f1e0e-9646-4ea6-89bd-136891731be8": {"node_ids": ["c289c8e2-48df-4542-93a4-113cb86866d5"], "metadata": {"page_label": "10", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "34cae5d5-cfad-4c79-9e6b-c9b93cc92792": {"node_ids": ["b02b484a-d2e2-4ffe-afb5-21b40ddc0e98"], "metadata": {"page_label": "11", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "97fa2ba9-78ff-43b5-878b-e1ed2e94aec1": {"node_ids": ["496e75ef-ce18-4a73-982a-bfbe967d689e"], "metadata": {"page_label": "12", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "e17652b9-92a6-4961-96c8-79757b4f72a9": {"node_ids": ["fa6c39ab-a34a-41f8-bffd-62e1ba6a504c"], "metadata": {"page_label": "13", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "9bf55d31-e4a7-42f7-ac71-c11eb627537c": {"node_ids": ["1004246d-533d-4b44-a4d5-0636dc51b4a9"], "metadata": {"page_label": "14", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "24eb089b-3e08-4b57-970e-4a7f47482506": {"node_ids": ["4a1b5c72-5886-425c-a2f6-df56f830b1bf"], "metadata": {"page_label": "15", "file_name": "Attention.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Attention.pdf", "file_type": "application/pdf", "file_size": 1439172, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "a169a083-f2f1-4129-a4c5-aa269e5f1df7": {"node_ids": ["c7981b12-0071-4216-80f5-b4b41b3bbb5b", "3bfcc540-677c-46a6-9123-82667f6fe061"], "metadata": {"page_label": "1", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "04fb0d13-6171-40bd-a899-e968c9d12a79": {"node_ids": ["0a1c0dff-fd25-4427-8464-b2e918adf1b3", "340aac20-0b9c-40a4-828a-6a10ef0de9ec"], "metadata": {"page_label": "2", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "f26bc7d3-900f-4b71-871c-3623181653d5": {"node_ids": ["9d52f812-87a6-4e32-8a86-73b267e07108"], "metadata": {"page_label": "3", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "179e64c6-0e98-4bcd-8a28-424b46b722ce": {"node_ids": ["e97e0d8a-c29d-4ede-b324-a32682603031"], "metadata": {"page_label": "4", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "dd8c41dd-4f30-45aa-9f24-4c42187bd089": {"node_ids": ["56a59ba4-2755-4bea-9893-2ef2ec474538", "8ea894ef-f21f-4dcc-a5e9-38fca91e0cd1"], "metadata": {"page_label": "5", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "dfe24c78-87b5-49e3-b983-b08e80c0d34b": {"node_ids": ["7961e64f-ad05-4abb-af1b-7322db79904b", "de69e404-59ea-4d48-a457-ed50dfacad02"], "metadata": {"page_label": "6", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "a322d5e2-d268-4f39-b943-1bd36c92d831": {"node_ids": ["7d61efd0-b799-4c2d-a36e-98f9feea743e", "e1eddd56-2e7d-4b3b-aea3-37748cb2ac9a", "ec6bd262-2a85-4505-8292-f247259a4da9"], "metadata": {"page_label": "7", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "28442dad-f08b-4696-bc2f-232f6e8e0d90": {"node_ids": ["ab4ebb60-822a-44bd-a46a-df85f265f1b7", "0247b09b-ce30-4531-9586-5524455f0d50"], "metadata": {"page_label": "8", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "03e2cd3e-53dc-430d-abef-8f3e3d41d4f1": {"node_ids": ["29cfe172-438d-45f6-af66-903ab5e0788b", "bf81f518-9ec6-4d16-b031-943277798f29"], "metadata": {"page_label": "9", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "75f70afd-2c93-41bc-91b4-9cca3f0d744c": {"node_ids": ["5636922c-3ddb-4892-9376-768782b8777c", "9d362fc9-1e95-4688-b73e-c27d22cf25aa", "1aae2c9d-faaf-4d4b-b334-81ea497b1cb5"], "metadata": {"page_label": "10", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "f62c0401-f1dc-487b-9e91-9115f13ffd4f": {"node_ids": ["7066f7a6-7ce2-4e23-b32b-7e22f662be89"], "metadata": {"page_label": "11", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "6281c9bd-bf64-43f2-bf9d-357e43b156d5": {"node_ids": ["2b0d1241-c4cd-4c88-9603-3de46457b937", "6c07f1e3-18c7-4d68-9622-2a4405314879", "29401257-bce6-4192-bb06-c20fee4eabb6"], "metadata": {"page_label": "12", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "69ed1f35-9835-4cb7-9889-b1ac13b3e54b": {"node_ids": ["21cd10f5-c5ad-4ed1-b7cd-565561991094", "8d766d3f-3be9-4f92-a0ee-8681464e2c38", "e795da50-a35a-4b22-ba7b-23e5884b9846"], "metadata": {"page_label": "13", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "62862598-7b5a-4f28-b474-34d071e70ab6": {"node_ids": ["e7ef32dd-1286-414c-aba3-e7328e4cca04", "e849645c-e8f3-445f-931c-4f4210763724", "fa3f3495-a93f-42e3-b661-e01522e4cc68"], "metadata": {"page_label": "14", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}, "781a2c44-b463-4705-b1b9-987c9aba0036": {"node_ids": ["0ff938a9-43b5-48e3-b7ad-38cd82587432", "8457a402-5fe7-438e-accf-f92bac836f5a", "f1dd4086-3686-426d-91ce-bc336fea4ff8"], "metadata": {"page_label": "15", "file_name": "Yolo.pdf", "file_path": "g:\\LLAMAINDEX\\data\\Yolo.pdf", "file_type": "application/pdf", "file_size": 552434, "creation_date": "2024-08-17", "last_modified_date": "2024-08-17"}}}}